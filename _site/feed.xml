<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Codigo</title>
		<description>Codigo</description>		
		<link>http://www.codigo.ovh</link>
		<atom:link href="http://www.codigo.ovh/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Já conheces o Hacklang? Uma linguagem que se interpola lindamente com o PHP!</title>
				<description>&lt;p&gt;Hack é uma linguagem de programação desenvolvida pelo Facebook. A equipa usa esta linguagem na rede social e tornou-a código aberto.&lt;/p&gt;

&lt;p&gt;O PHP é uma linguagem dinâmica enquanto que C# é estática.&lt;/p&gt;

&lt;p&gt;Uma linguagem estática tem de ser compilada para ser executada, temos o exemplo de C++ e C#. Se num projeto .NET alterar-mos código temos de construir de novo o projeto e gerar as dll&lt;/p&gt;

&lt;p&gt;Em PHP isso não acontece porque é dinâmica. Há casos em que isto até é aproveitado para criar ficheiros php em tempo de execuxão (um exemplo são os Hydrators do Doctrine ODM, um ORM orientado a base de dados documentais).&lt;/p&gt;

&lt;p&gt;Hack é uma mistura destes dois tipos de linguagem, como o PHP é uma linguagem dinâmica e ambas interpolam-se sem problemas mas também é estaticamente “tipada”. &lt;/p&gt;

&lt;p&gt;O Hack utiliza um compilador Just In Time chamado Hip Hop Virtual Machine - HHVM. Em vez de interpretar ou compilar código PHP diretamente para C++, o HHVM compila o Hack e PHP para um código binário intermediário que é traduzido para código de máquina x64 dinamicamente em tempo de execução pelo compilador.&lt;/p&gt;

&lt;p&gt;Entre as várias vantagens do hack vou destacar aquelas que me levaram a começar a programar com esta linguagem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Atributos - usar atributos podes facilitar em muito a manutenção do código. Podem ser usados nos métodos de um controlador para indicar o URL de destino, numa classe de validação para indicar os tipos de campos, numa classe de domínio para indicar fazer o mapeamento das propriedades da classe com os campos da base de dados, etc&lt;/li&gt;
  &lt;li&gt;Enumerador - apesar de existem bibliotecas em PHP que simulam enumeradores eles não existem nativamente em PHP&lt;/li&gt;
  &lt;li&gt;Genêricos - utilizar tipos genêricos aumenta muito o desenvolvimento em certas situações como a criação de um repositório quer receba um tipo genêrico &lt;strong&gt;T&lt;/strong&gt;. Isto permite ter uma classe definida que consiga lidar com vários tipos de entidades (normalmente extendemos a classe do repositório e só escrevemos novas funções quando precisamos de queries específicas).&lt;/li&gt;
  &lt;li&gt;Anotações de tipo - sem dúvida o forte do hacklang. Quando criamos uma variável indicamos se é um número inteiro, uma string, etc enquanto que em PHP é dinâmico e apenas anotamos arrays ou classes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;instalao&quot;&gt;Instalação&lt;/h3&gt;

&lt;p&gt;A instalação é facilitada com pacotes suportados pela equipa do Facebook para debian, ubuntu e mint. Também existem pacotes distribuídos pela comunidade para Fedora, Centos, Amazon Linux, Arch e outras versões do Ubuntu.&lt;/p&gt;

&lt;p&gt;O hhvm precisa de um servidor web, o recomendado é o nginx. Na instalação do hhvm é disponibilizado um script que configura a comunicação do hhvm com o nginx por sockets usando o fastcgi (não confundas com o php-fpm, ele é responsável por fazer o php comunicar com o fastcgi e não o hhvm). Este script é corrido após a instalação:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
sudo sh /usr/share/hhvm/install_fastcgi.sh
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Este script adiciona o ficheiro hhvm.conf no directório /etc/nginx&lt;/p&gt;

&lt;h3 id=&quot;comear-a-usar&quot;&gt;Começar a usar&lt;/h3&gt;

&lt;p&gt;Partimos do princípio que qualquer projecto PHP irá correr no hhvm. Isto nem sempre é verdade pois hà funcionalidades no PHP que não são permitidas em hacklang, mas a maioria podemos considerar maus hábitos de programação que têem vindo a ser usados no PHP por ser “tão dinâmico”.&lt;/p&gt;

&lt;p&gt;Na raíz do projecto criamos um ficheiro em branco &lt;strong&gt;.hhconfig&lt;/strong&gt;. Este ficheiro permite ao type checker do hhvm saber onde procurar o código a avaliar.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
hhclient
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Se o projecto for apenas PHP e ainda não tivermos programado nad em hacklang, o type checker vai correr um daemon e retornará &lt;code&gt;no errors&lt;/code&gt;.&lt;/p&gt;
</description>
				<pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/php/hacklang/2015/02/09/php-hack-introducao.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/php/hacklang/2015/02/09/php-hack-introducao.html</guid>
			</item>
		
			<item>
				<title>Análise da fuga de informação da equipa do Facebook</title>
				<description>&lt;h1 id=&quot;anlise&quot;&gt;Análise&lt;/h1&gt;

&lt;p&gt;Escrevi na Volupio &lt;a href=&quot;http://volupio.com/falha-de-programadores-facebook-revela-demasiado/&quot;&gt;um artigo sobre a fuga de informação da responsabilidade de trabalhadores do Facebook&lt;/a&gt;, aqui vou tentar analisar mais detalhadamente a informação recolhida.&lt;/p&gt;

&lt;p&gt;Tudo começa na publicação de Malcom, que &lt;a href=&quot;http://sintheticlabs.com/blog/a-look-inside-facebooks-source-code.html&quot;&gt;pode ser lida aqui&lt;/a&gt;. Malcom estava a lidar com erros do Phabricator, uma plataforma de código aberto lançada pela equipa do Facebook. Quando eu elogio o Facebook por contribuir para o código de fonte aberta é exactamente por isto, bibliotecas, plataformas e até uma linguagem de programação que a equipa desenvolveu e distribuíu. Para quem programa em PHP, o &lt;a href=&quot;http://hacklang.org/&quot;&gt;PHP Hack&lt;/a&gt; é um grande exemplo de um passo dado pelo Facebook para levar o PHP mais além, e para mim enquanto programador C# foi uma razão para gostar ainda mais de PHP.&lt;/p&gt;

&lt;p&gt;Como é uma plataforma relativamente recente e utilizada internamente pela equipa, é de esperar que as conversas e registos que se encontrem pelo Google provenham deles mesmos. Foi isso que aconteceu quando o Malcom pesquisa no Google e se deparou com código colado no pastebin que continha referências ao Phabricator e estava directamente relacionado com a plataforma do Facebook.&lt;/p&gt;

&lt;p&gt;Vamos ver um exemplo: &lt;a href=&quot;http://pastebin.com/DMjWQ0cJ&quot;&gt;http://pastebin.com/DMjWQ0cJ&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Index: flib/core/db/queryf.php
===================================================================
--- flib/core/db/queryf.php
+++ flib/core/db/queryf.php
@@ -1104,11 +1104,12 @@
  *  @author rmcelroy
  */
 function mysql_query_all($sql, $ok_sql, $conn, $params) {
+  FBTraceDB::rqsend($ok_sql);
   switch (SQLQueryType::parse($sql)) {
     case SQLQueryType::READ:
       $t_start = microtime(true);
       $result = mysql_query_read($ok_sql, $conn);
       $t_end = microtime(true);
       $t_delta = $t_end - $t_start;
       if ($t_delta &amp;gt; ProfilingThresholds::$queryReadDuration) {
         ProfilingThresholds::recordDurationError('mysql.queryReadDuration',
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A informação colada nesse pastebin foi publicada por um visitante dia 17 deste mês. Pela formatação do código conseguimos ver que provem de uma consulta com o GIT, possivelmente um diff. É uma função simples que executada instruções SQL, e muito possivelmente o trabalhador do Facebook colou isto para passar a outro.&lt;/p&gt;

&lt;p&gt;Isto é muito comum, dou por mim a partilhar erros e registos com outros utilizadores (seja no Mirc ou comunidades como StackOverflow) neste tipo de serviços mas sempre informação que não considero priveligiada, caso contrário não pode ir para um domínio publico que ainda por cima é indexado pela Google!&lt;/p&gt;

&lt;p&gt;Continuando com a análise, este é apenas um pedaço da informação. No artigo, o Malcom recolheu muito mais código e inclusive arquivou tudo num ficheiro .zip e disponibilizou no seu site. Nesse arquivo, além de registos de erros está também pedaços de código e também de testes.&lt;/p&gt;

&lt;p&gt;Algo interessante a realçar é o facto de a equipa usar o PHPUnit para realizar testes. &lt;/p&gt;

&lt;p&gt;Pelos caminhos indicados em alguns registos também podemos saber o nome das contas utilizadas por alguns trabalhadores. Por exemplo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Running unit tests...
HipHop Fatal error: Uncaught exception exception 'PhutilBootloaderException' with message 'The phutil library '' has not been loaded!' in /home/engshare/devtools/libphutil/src/__phutil_library_init__.php:124\nStack trace:\n#0 /home/engshare/devtools/libphutil/src/__phutil_library_init__.php(177): PhutilBootloader-&amp;gt;getLibraryRoot()\n#1 /home/engshare/devtools/arcanist/src/unit/engine/phutil/PhutilUnitTestEngine.php(53): PhutilBootloader-&amp;gt;moduleExists()\n#2 /home/engshare/devtools/arcanist/src/workflow/unit/ArcanistUnitWorkflow.php(113): PhutilUnitTestEngine-&amp;gt;run()\n#3 /home/engshare/devtools/arcanist/src/workflow/diff/ArcanistDiffWorkflow.php(1172): ArcanistUnitWorkflow-&amp;gt;run()\n#4 /home/engshare/devtools/arcanist/src/workflow/diff/ArcanistDiffWorkflow.php(225): ArcanistDiffWorkflow-&amp;gt;runUnit()\n#5 /home/engshare/devtools/arcanist/scripts/arcanist.php(257): ArcanistDiffWorkflow-&amp;gt;run()\n#6 {main}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este registo foi gerado HHVM e a conta engshare sugere uma conta partilhada pelos engeheiros do Facebook.&lt;/p&gt;

&lt;p&gt;Nos outros logs está muito presente o nome de uma biblioteca que será utilizada pela equipa que contém utilitários úteis e funções para ajudar o desenvolvimento.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[25/10/2013] Promoting The Meme Bank (1/1) - Campaign Update Failed: Campaign 6009258279237: Value cannot be null (Value given: null) TAAL[BLAME_files,www/flib/core/utils/enforce.php,www/flib/core/utils/EnforceBase.php]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O nome dessa biblioteca é flib - Facebook Library.&lt;/p&gt;

&lt;p&gt;Outra informação muito relevante, no qual se baseou o artigo que escrevi na Volupio é uma ligação à base de dados. Esta informação parece ter vindo de um print_r() de uma array que acabou por ser enviado para produção hà alguns anos:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;array ( 'ip' =&amp;gt; '10.21.209.92', 'db_name' =&amp;gt; 'insights', 'user' =&amp;gt; 'mark', 'pass' =&amp;gt; 'e5p0nd4', 'mode' =&amp;gt; 'r', 'port' =&amp;gt; 3306, 'cleanup' =&amp;gt; false, 'num_retries' =&amp;gt; 3, 'log_after_num_retries' =&amp;gt; 4, 'reason' =&amp;gt; 'insights', 'cdb' =&amp;gt; true, 'flags' =&amp;gt; 0, 'is_shadow' =&amp;gt; false, 'backoff_retry' =&amp;gt; false, )
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;o-que-podemos-aprender-daqui&quot;&gt;O que podemos aprender daqui&lt;/h1&gt;

&lt;p&gt;Quando trabalhei em consultoria sempre fui avisado para a necessidade de ter cuidado com o código que poderia “tirar para fora” da rede interna de desenvolvimento, assim como as cláusulas que podem existir nos contratos em que o trabalhador é responsabilizado por este tipo de conduta.&lt;/p&gt;

&lt;p&gt;Se eu estiver a trabalhar numa tarefa no final do dia de uma Sexta Feira e a empresa estiver fechada no fim de semana, vou ser tentado a acabar o código no Sábado. Para isso passo-o para uma pen, colo-o num serviço como o pastebin, deixo-o na minha conta de email, etc. Entre estas possibilidades existe o privado e público, o caso do pastebin é publico.&lt;/p&gt;

&lt;p&gt;Mesmo em serviços privados eu sempre tive muito medo. Enquanto programador tenho acesso ao código fonte completo daquilo em que estou a trabalhar, e basta perder uma pen ou deixar a sessão ligada no meu PC enquanto vou à casa de banho num café, e pode ser o suficiente para este tipo de fugas acontecerem.&lt;/p&gt;

&lt;p&gt;Neste caso do Facebook foi pior, pois foi colado no pastebin e nem foi protegido com uma password.&lt;/p&gt;

&lt;p&gt;O que podemos aprender daqui? De nada vale um projeto estar protegido por firewalls, pontos de acessos, enfim tudo e mais alguma coisa que possamos imaginar em segurança de redes, se os programadores são negligêntes ao ponto de colarem o próprio código na Internet!&lt;/p&gt;

&lt;p&gt;Link do artigo que escrevi na Volupio: &lt;a href=&quot;http://volupio.com/falha-de-programadores-facebook-revela-demasiado/&quot;&gt;http://volupio.com/falha-de-programadores-facebook-revela-demasiado/&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Sun, 21 Dec 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/security/facebook/2014/12/21/analise-fuga-informacao-facebook.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/security/facebook/2014/12/21/analise-fuga-informacao-facebook.html</guid>
			</item>
		
			<item>
				<title>AngularJS - Dependências de módulos diferentes com nomes iguais</title>
				<description>&lt;h3 id=&quot;angularjs---dependncias-de-mdulos-diferentes-com-nomes-iguais&quot;&gt;AngularJS - Dependências de módulos diferentes com nomes iguais&lt;/h3&gt;

&lt;p&gt;Por norma, os serviços começados com &lt;strong&gt;$&lt;/strong&gt; percentem ao núcleo do AngularJS. Alguns exemplos: $scope, $rootScope, $locationProvider do módulo &lt;code&gt;ngRoute&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Quando existem nomes iguais de um serviço, diretiva, controlador, a injecção é resolvida pela ordem com que são os módulos dependentes. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;angular.module('moduleOne', []).service('bible', function(){});

angular.module('moduleTwo', ]).service('bible', function(){})

angular.module('app', ['moduleOne', 'moduleTwo'])
		.controller('homeCtrl', ['bible', function(bible) {}])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O serviço &lt;code&gt;bible&lt;/code&gt; injetado no controlador é o do módulo moduleTwo por ele ter sido declarado no array depois do moduleOne. No caso de saber-mos que um serviço com o mesmo nome deve provir de determinado módulo, a posição desse módulo no array deve ser depois dos outros com um serviço com o mesmo nome.&lt;/p&gt;

&lt;p&gt;No entanto este comportanto apesar de ser esperado não é uma boa forma de resolvermos o problema. O ideal é especificar qual o módulo do qual queremos injetar o serviço &lt;code&gt;bible&lt;/code&gt; utilizando o &lt;code&gt;injector()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;angular.module('app', ['moduleOne', 'moduleTwo'])
		.controller('homeCtrl', ['$injector', function($injector) {
				var mod = angular.injector(['moduleOne']);
				var bible = mod.get('bible');
			}]);
&lt;/code&gt;&lt;/pre&gt;
</description>
				<pubDate>Fri, 05 Dec 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/angularjs/2014/12/05/dependencias-de-moduls-diferentes-com-nomes-iguais.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/angularjs/2014/12/05/dependencias-de-moduls-diferentes-com-nomes-iguais.html</guid>
			</item>
		
			<item>
				<title>Boas práticas em AngularJS</title>
				<description>&lt;p&gt;Neste artigo vou demonstrar boas práticas para trabalhar com o AngularJS. O resultado final vai ser este:&lt;/p&gt;

&lt;iframe height=&quot;350&quot; scrolling=&quot;no&quot; src=&quot;http://codepen.io/guilhermecardoso/embed/LEGpmY/&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 100%;&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/guilhermecardoso/pen/LEGpmY/&quot;&gt;LEGpmY&lt;/a&gt; by Guilherme Cardoso (&lt;a href=&quot;http://codepen.io/guilhermecardoso&quot;&gt;@guilhermecardoso&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;

&lt;p&gt;Como os restantes artigos eu vou actualizando à medida que tenho tempo, por isso esta versão inicial pode ser confusa.&lt;/p&gt;

&lt;h3 id=&quot;isolamento&quot;&gt;Isolamento&lt;/h3&gt;

&lt;p&gt;Para isolar ao máximo os contextos, sempre que escrevo um controlador, um serviço, uma directia uso uma expressão de função imediatamente-invocada. Podes ler mais aqui: &lt;a href=&quot;http://www.codigo.ovh/javascript/pattern/2014/09/10/javascript-iife.html&quot;&gt;Expressão de Função Imediatamente-Invocada (IIFE)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tudo que existir dentro da função não está acessível aos contextos parentes, neste caso o global.&lt;/p&gt;

&lt;p&gt;Neste exemplo eu apenas deixo no contexto global a &lt;code&gt;app&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var app = angular.module('web', ['ngRoute']);
(function(){

})();
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;problema-de-minificadores&quot;&gt;Problema de minificadores&lt;/h3&gt;

&lt;p&gt;É bastante comum em tutoriais ver-mos exemplos assim:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;angular.module('web').controller('homeCtrl', function($scope) {
	$scope.message = 'message';
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este código não apresenta erros e é válido mas vamos supor que queremos minificar o código com uma ferramenta. Essa ferramenta vai alterar os nomes das variáveis e o resultado será este:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;angular.module('web').controller('homeCtrl', function(s) {
	s.message = 'message';
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agora o AngularJS não vai conseguir injetar a $scope. Isto é esperado e não é nenhum erro, na verdade a ferramenta está a fazer bem o seu trabalho a minificar. &lt;/p&gt;

&lt;p&gt;Uma solução será enviar uma array com as dependências e só no final a função a ser executada.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;angular.module('web').controller('homeCtrl', ['$scope', function($scope) {
	$scope.message = 'message';
}]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Na primeira entrada da array a $scope é passada numa string, o que significa que o minificador vai deixar o valor intacto. Já na variável da função ele vai substituír a $scope mas não há problema, pois o AngularJS sabe que a primeira variável é a $scope, independentemente do nome que a variável tiver. O resutlado é este:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;angular.module('web').controller('homeCtrl', ['$scope', '$rootScope', function(s, r) {
	s.message = 'message';
}]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A variável &lt;code&gt;s&lt;/code&gt; é a $scope e a &lt;code&gt;r&lt;/code&gt; a $rootScope. Quando recebe um array, o AngularJS sabe que o último valor é sempre a função e vai resolver as dependências pelos valores passados no array.&lt;/p&gt;

&lt;h3 id=&quot;outra-estratgia&quot;&gt;Outra estratégia&lt;/h3&gt;

&lt;p&gt;O último exemplo é compatível com o minificador e é válido mas outra alternativa a meu ver mais correta é ao chamar a função &lt;code&gt;controller&lt;/code&gt; passar apenas o nome do controlador e a sua função. As dependências são injetadas na função e declaradas sempre na propriedade &lt;code&gt;$inject&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vamos examinar o exemplo do controller &lt;code&gt;homeCtrl&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(function(){
  
  var cntrlFn = function($log, sharedService) {
    var self = this;
    self.$log = $log;
    self.service = sharedService;
  };

  cntrlFn.$inject = ['$log', 'sharedService'];
  app.controller('homeCtrl', cntrlFn);
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Quando atribuo a função à variável cntrlFn tento criar o método main. Registo as dependências na função com o &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Todos os métodos que quiser implementar no controller faço-o com o prototype, por exemplo o método refresh e logout:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(function(){
  
  var cntrlFn = function($log, sharedService) {
    var self = this;
    self.$log = $log;
    self.service = sharedService;
  };

  cntrlFn.prototype.refresh = function(){
  	var self = this;
  	self.$log('refreshed');
  };

  cntrlFn.prototype.logout = function(){
  	window.location = '/logout';
  };

  cntrlFn.$inject = ['$log', 'sharedService'];
  app.controller('homeCtrl', cntrlFn);
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A documentação é uma das razões pela qual gosto de estruturar assim o código. É mais fácil
### controllerAs&lt;/p&gt;

&lt;p&gt;Neste exemplo eu não estou a expor os membros do controller na &lt;code&gt;$scope&lt;/code&gt;. Isto começou na versão 1.2 porque a $scope acabava por representar o próprio controller, e torna-se mais intuitívo utilizar o &lt;code&gt;this&lt;/code&gt; no controller para declarar as propriedades e ficarem acessíveis na página.&lt;/p&gt;

&lt;p&gt;Tanto o &lt;code&gt;$routeProvider&lt;/code&gt; como o &lt;code&gt;$stateProvider&lt;/code&gt; do módulo ui-router suportam o controllerAs da seguinte forma:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$routeProvider.when('/', {
	controller: 'homeCtrl',
	controllerAs: 'ctrl'
});

$stateProvider.state('home', {
	url: '/',
	controller: 'homeCtrl',
	controllerAs: 'ctrl'
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O controller fica acessível através do &lt;code&gt;ctrl&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div ng-bind=&quot;ctrl.message&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
				<pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/angularjs/2014/12/01/AngularJS.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/angularjs/2014/12/01/AngularJS.html</guid>
			</item>
		
			<item>
				<title>Utiliza emails descartáveis gratuitamente!</title>
				<description>&lt;p&gt;Mais de metade dos emails de spam que recebo foram serviços que subscrebi apenas para obter algo como fazer um download de um PDF ou receber por email uma activação no site.&lt;/p&gt;

&lt;p&gt;Havia uma altura em que utilizava uma conta de email apenas para estes tipos de registos, ou para outras inscrições em sites menus seguros ou a quem eu não confiasse. &lt;/p&gt;

&lt;p&gt;Uma boa alternativa a ter de gerir mais outro email é usar emails descartáveis! A filosofia é bastante simples: crias uma conta de email por pedido, coma duração de 60 minutos. Para isto podemos usar o Guerrilla Mail https://www.guerrillamail.com&lt;/p&gt;

&lt;p&gt;Com um email temporário podes registar-te em determinado serviço sem te associares a ele. Como as contas têem a duração de 60 minutos não podes partir do princípio que vais voltar acesso à conta, ou seja, após os 60 minutos não podes recuperar passwords, receber emails de confirmação, etc. Mas não é para isso que este tipo de emails servem também.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;entry__image&quot; src=&quot;/media/posts/temporary-mail-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Algumas finalidades para este serviço:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Registo em sites suspeitos - senão confias na fonte e não queres criar um registo a identificar-te&lt;/li&gt;
  &lt;li&gt;Registo apenas para receber um email - no caso de downloads de PDFs ou &lt;code&gt;gifts&lt;/code&gt; ocasionais (a estratégia de oferecer uma parte do conteúdo requerendo um registo para a subscrição de newsletters)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;api&quot;&gt;API&lt;/h4&gt;

&lt;p&gt;Um ponto forte deste serviço é o acesso a uma API. Por esta API podemos criar novas contas temporárias, receber e enviar emails. &lt;/p&gt;

&lt;p&gt;Uma das primeiras utilidades que me veio à cabeça foi usar estes emails para registar contas em massa em serviços aos quais consiga ultrapassar a protecção de recaptcha. Como temos acesso à API podemos muito bem interpetrar os emails recebidos e assim confirmar automáticamente as contas. &lt;/p&gt;
</description>
				<pubDate>Tue, 25 Nov 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/bower/2014/11/25/emails-temporarios.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/bower/2014/11/25/emails-temporarios.html</guid>
			</item>
		
			<item>
				<title>Como utilizar cantos arredondados e fazer circulos com CSS?</title>
				<description>&lt;p&gt;Em CSS a propriedade &lt;strong&gt;border-radius&lt;/strong&gt; permite adicionar cantos arredondados a elementos e ficam visíveis quando o elemento tem uma cor de fundo.&lt;/p&gt;

&lt;p&gt;O valor do raio pode ser definido em percentagem. Usando 50% conseguimos criar um circulo&lt;/p&gt;

&lt;iframe height=&quot;350&quot; scrolling=&quot;no&quot; src=&quot;http://codepen.io/guilhermecardoso/embed/bNdKaw/&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 100%;&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/guilhermecardoso/pen/bNdKaw/&quot;&gt;bNdKaw&lt;/a&gt; by Guilherme Cardoso (&lt;a href=&quot;http://codepen.io/guilhermecardoso&quot;&gt;@guilhermecardoso&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;

&lt;p&gt;O valor do border-radius pode ser aplicado de várias formas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 valor - aplicado aos 4 cantos&lt;/li&gt;
  &lt;li&gt;2 valores - primeiro valor é aplicado aos canto superior esquerdo e inferior direito, segundo valor é aplicado ao canto superior direito e inferior esquerdo.&lt;/li&gt;
  &lt;li&gt;4 valores - primeiro aplicado ao superior esquerdo, segundo ao superior direito, terceiro ao inferior direito e o quarto ao inferior esquerdo&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe height=&quot;350&quot; scrolling=&quot;no&quot; src=&quot;http://codepen.io/guilhermecardoso/embed/bNdKLB/&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 100%;&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/guilhermecardoso/pen/bNdKLB/&quot;&gt;bNdKLB&lt;/a&gt; by Guilherme Cardoso (&lt;a href=&quot;http://codepen.io/guilhermecardoso&quot;&gt;@guilhermecardoso&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;

&lt;p&gt;Sobre a utilização dos prefixos dos vendedores que uso no exemplo recomendo esta leitura: http://css-tricks.com/do-we-need-box-shadow-prefixes/&lt;/p&gt;

&lt;p&gt;É importante referir que a utilização de valores percentuais on Safari apenas é suportado na versão 5.1 para cima e no Opera 11.5 para cima. &lt;/p&gt;

&lt;p&gt;Também existe uma falha em alguns navegadores Android 4+ com a utilização de apenas um valor no border-radius http://stackoverflow.com/questions/17944749/border-radius-style-doesnt-work-in-android-browser&lt;/p&gt;

&lt;p&gt;Recursos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://css-tricks.com/almanac/properties/b/border-radius/&quot;&gt;CSS Tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 25 Nov 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/css/html/2014/11/25/CSS-cantos-arredondados.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/css/html/2014/11/25/CSS-cantos-arredondados.html</guid>
			</item>
		
			<item>
				<title>PHP e gettext</title>
				<description>&lt;h3 id=&quot;linux&quot;&gt;Linux&lt;/h3&gt;

&lt;p&gt;Para o gettext funcionar correctamente em Linux é preciso ter o idioma usado instalado no sistema operativo.&lt;/p&gt;

&lt;p&gt;Isto é uma requisição, caso contrário o gettext não funciona. Para instalar novos idiomas em debian em descomento a entrada para o idioma que quero no ficheiro /etc/locale.gen, por exemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pt_PT.UTF-8 UTF-8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para o debian reconfigurar o idioma &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg-reconfigure locales
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Isto vai instalar todos os idiomas em uso no /etc/locale.gen&lt;/p&gt;

&lt;h3 id=&quot;php&quot;&gt;PHP&lt;/h3&gt;

&lt;p&gt;Quando desenvolvo uma aplicação em PHP deixo os idiomas na configuração da aplicação. Se já usares uma framework terás de ver a documentação dela para associares um novo dominio.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$language = &quot;pt_PT&quot;;
$codeset = 'UTF-8';
$locale = $language . '.' . $codeset;
$domain = 'messages';

if(defined($locale)) { // linux
    setlocale(LC_MESSAGES, $locale);
}
else {
    putenv('LC_ALL={$locale}'); // windows
}
putenv('LANG={$language}');

bindtextdomain($domain, '../i18n/Locale');
bind_textdomain_codeset($domain, $codeset);
textdomain($domain);
&lt;/code&gt;&lt;/pre&gt;

</description>
				<pubDate>Thu, 20 Nov 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/php/2014/11/20/php-gettext.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/php/2014/11/20/php-gettext.html</guid>
			</item>
		
			<item>
				<title>Dicas para te protegeres de ataques, malware e problemas comuns</title>
				<description>&lt;p&gt;Série de artigos sobre segurança online&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Passwords&lt;/li&gt;
  &lt;li&gt;Navegação&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;precauo&quot;&gt;Precaução&lt;/h2&gt;

&lt;p&gt;A prevenção é boa manutenção da máquina é essencial. Não basta apenas instalar programas e esperar que eles por si sejam responsáveis pela segurança.&lt;/p&gt;

&lt;p&gt;Os programas são bons para analisar e detectar mas a prevenção é que dita se ficheiros maliciosos e outras ameaças conseguem alcançar a nossa máquina, temos de adoptar boas práticas e criar hábitos que proporcionem isto.&lt;/p&gt;

&lt;h2 id=&quot;programas&quot;&gt;Programas&lt;/h2&gt;

&lt;p&gt;Uma das formas de distribuir código malicioso e alcançar os utilizadores finais é através de programas. Programas que são instalados para realizarem determinada função mas que traz consigo código com outras intenções, semelhantemente ao cenário do cavalo de troia.&lt;/p&gt;

&lt;p&gt;Neste tipo de programas é mais comum nos deparar-mos com:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gestor de drivers e actualizações&lt;/li&gt;
  &lt;li&gt;Anti Virus e programas de segurança&lt;/li&gt;
  &lt;li&gt;Cracks e patchs&lt;/li&gt;
  &lt;li&gt;Anexos de emails&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algo que estes programas têm em comum: têm de ser instalados! Isto também inclui programas instalados como terceiros, ou seja, programas instalados como ofertas, bónus ou promoções durante a instalação de outros.&lt;/p&gt;

&lt;p&gt;Isto normalmente ocorre na aceitação de termos e condições ou na finalização da instalação, e os responsáveis usam truques baixos para levarem as pessoas a instalar. Vamos analisar algumas formas comuns:&lt;/p&gt;

&lt;h4 id=&quot;download&quot;&gt;Download&lt;/h4&gt;

&lt;p&gt;Na página do programa se houver publicidade da Google ou outra intencional, facilmente nos deparamos com 2 ou 3 caixas a dizerm “Download” e ficamos sem saber onde realmente é realizado o download. Isto é um truque utilizador: a publicidade recebe do site informação em relação ao Download e usam-na como referência para o nome do ficheiro ou para aparecer no quadrado de publicidade e levar o utilizador a pensar que é ali o Download.&lt;/p&gt;

&lt;p&gt;O ficheiro descarregado pode ser um programa totalmente diferente do que preendíamos, pode ser um gestor de programas que diz instalar o programa que procuramos ou pode até abrir a instaação normal do programa que queremos mas trazer consigo código malicioso.&lt;/p&gt;

&lt;h4 id=&quot;integridade&quot;&gt;Integridade&lt;/h4&gt;

&lt;p&gt;Integridade neste contexto significa que o ficheiro original que é distribuído e que recebemos não foi modificado. Uma forma utilizada para comprovar a integridade de um programa é verificar a assinatura md5. &lt;/p&gt;

&lt;p&gt;MD5 significa Message-Digest algorithm, um algoritmo de hash desenvolvido pela RSA Data Security inc com 128 bits unidireccional.&lt;/p&gt;

&lt;p&gt;Por ser unidireccional, após ter sido gerado o hash por um texto (por exemplo uma password) não podemos transformar o hash novamente no texto que o originou. Com as passwords guardamos na base de dados encriptadas com MD5 e quando um utilizador se autentica criamos uma hash com a password inserida e comparamos com a hash da base de dados, não podemos desencriptar a hash da base de dados para comparar com a password inserida.&lt;/p&gt;

&lt;h4 id=&quot;processo-de-instalao&quot;&gt;Processo de Instalação&lt;/h4&gt;

&lt;p&gt;Neste exemplo vou instalar o Daemon Tools Lite.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-intro-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Primeiro passo é aceitar os termos do Daemon Tools Lite. A aceitação dos termos costuma ser dos primeiros passos na instalação.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-intro-2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta escolha ainda é relevante ao Daemon Tools Lite. Apesar de ter escolhido a versão gratuíta no site, na instalação icentivam o utilizador a comprar a licença.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-intro-3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aqui está a primeira tentativa de nos enganar. Quando olhamos para este ecrã partimos do princípio que apenas a opção “Typical installation (recommended)” está disponível pois a opçção “Custom installation (advanced)” está com outra cor e tanto a roda (radio button) como o texto estão desactivados. Fazemos isto a elementos quando o utilizador não os pode utilizar, neste caso é apenas para enganar. De outra forma não estaria “recomended”.&lt;/p&gt;

&lt;p&gt;Com a instalação que nos recomendam vamos instalar o Linkey e todo o malware que venha atrás. Podemos então carregar no “Custom installation (advanced)” &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-intro-4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Uma observação que reforça a intenção de enganar: agora a opção “Typical installation (recommended)” não está desactivada como a opção “Custom installation (advanced)” estava a início. Se não estivesse desactivada para enganar, porque não se desactivou a Typical agora que escolhemos? Removemos todos os vistos neste passo.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-intro-5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para finalizar ainda levamos com o TuneUp Utilities 2014. De novo a técnica de desactivar a opção “I do not accept”. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-intro-6.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ainda durante a instalação aparece mais um Gadget a ser instalado.&lt;/p&gt;

&lt;h2 id=&quot;anlise&quot;&gt;Análise&lt;/h2&gt;

&lt;h4 id=&quot;processos&quot;&gt;Processos&lt;/h4&gt;

&lt;p&gt;No Windows podemos usar o gestor de tarefas paras consultas os processos em execução. Um programa quando é executado usa um ou mais processos, por vezes conseguimos descubrir problemas com o gestor de tarefas e uma pesquisa no Google para procurar rastos do mesmo processo mas pode ser irrelevante. Pode ser um nome aleatório ou até mesmo código injetado noutro processo.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-intro-7.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nos serviços também pode estar algo malicioso que tenha escalado a permissão de administração e criado um serviço do Windows.&lt;/p&gt;

&lt;p&gt;Há programas específicos para analisar processos em execução sem ser o gestor de tarefas.&lt;/p&gt;
</description>
				<pubDate>Wed, 19 Nov 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/seguranca/2014/11/19/seguranca-online-intro.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/seguranca/2014/11/19/seguranca-online-intro.html</guid>
			</item>
		
			<item>
				<title>Começar a trabalhar como programador</title>
				<description>&lt;p&gt;Neste artigo vou tentar explicar que vários rumos podes tomar na área da programação, mas também direccionado a quem queira estudar web design ou outras áreas como gestão de base de dados. &lt;/p&gt;

&lt;p&gt;Tudo começa no planeamento que vais criar para a tua carreira enquanto programador. Vou dividir em três níveis&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Baixo - Não investes muito tempo para conhecer a linguagem de programação (ou seja, apenas conheces uma também) e trabalhas em projetos rotinários que não te façam ter de sair da tua zona de conforto. Isto implica que não precises de estudar e avançar mais do nível onde te encontras.&lt;/li&gt;
  &lt;li&gt;Normal - Além das 8 horas de trabalho investes tempo para te manteres actualizado e tudo que aprendes não é apenas da necessidade dos projetos. &lt;/li&gt;
  &lt;li&gt;Alto - Estudas e aprendes tecnologias que não usas no teu trabalho, lês teses e projetos com o objetivo de aprendizagem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algo que sempre gostei em programação é que o teu valor enquanto provedor de serviços (não meramente um empregado) pode ser porpocional ao tempo que dedicas a estudar. Para te tornares um melhor programador não precisas de ir para uma boa faculdade ou ter uma cunha, simplesmente tens de estudar. E para isso é preciso gostar mesmo asério do que vais fazer.&lt;/p&gt;

&lt;p&gt;Dependendo da área onde residas, a tua escolha de te tornares um programador de alto nível pode implicar que tenhas de trabalhar noutro local ou então iniciares-te como freelancer. No caso de Portugal hà boas empresas fora das cidades principais Lisboa, Porto, Coimbra e Braga. No entanto é mais em Lisboa e Porto que o mercado de consultoria está localizado e onde tens mais diversidade de escolha.&lt;/p&gt;

&lt;h3 id=&quot;empresas-de-webdesign&quot;&gt;Empresas de Webdesign&lt;/h3&gt;

&lt;p&gt;Não é a desenvolver websites ou a usar CMS que vão aparecer desafios que te evoluam e criem a necessidade de estudo. Há muitas empresas assim, com serviços como: desenvolvimento de websites, criação de lojas online, criação de portais, etc. Basicamente criam sites. Neste tipo de empresas não tens muita margem para evoluir. Alguns exemplos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O código que escreves é irrelevante tanto para o cliente como para o teu empregador, pois não tens nenhum chefe de equipa decerta forma a julgar-te e valorizar-te também. Curtos prazos de desenvolvimento são pedidos porque o projeto foi vendido ao preço de umas sapatilhas, e tens de rentabilizar o tempo.&lt;/li&gt;
  &lt;li&gt;Testes unitários demoram tempo. Na realidade, até podes poupar tempo se souberes desenvolver a escrever testes (TDD) mas isso não interessa para a empresa. Escrever testes = escrever mais código = prazos maiores de desenvolvimento.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uma empresa assim pode ser boa para começares a trabalhar. Outra alternativa é começar no mercado da consultoria mas isso já requer alguma experiência ou boa teoria.&lt;/p&gt;

&lt;h3 id=&quot;consultoria&quot;&gt;Consultoria&lt;/h3&gt;

&lt;p&gt;Em consultoria o cenário é diferente, muito diferente. O teu empregador pode ser uma empresa com equipas pŕoprias de desenvolvimento que esteja a contratar especificamente para aquele projeto ou pode ser uma empresa que apenas sub contrata.&lt;/p&gt;

&lt;p&gt;Podes ser contratado apenas para um projeto ou assinar mesmo um contrato com uma empresa mas simplesmente trabalhares como consultor. Vais participar em projetos externos, conhecer várias pessoas da área pois lidas com muita coisa mesmo! Na mesma sala pode estar uma equipa de desenvolvimento á medida, outra de SAP.&lt;/p&gt;

&lt;p&gt;Os ambientes são mais formais. Eu gosto disto, trabalhei em sítios onde realmente respeitam o local de trabalho e o silêncio é apreciado. Isto é muito importante porque se fores trabalhar para uma empresa pequena onde tenhas uma pessoa que a função dela não requer atenção e foco na tarefa, basta ser engraçadinho e é o suficiente para te afetar durante o trabalho, não te conseguires concentrar.&lt;/p&gt;

&lt;h4 id=&quot;perfil&quot;&gt;Perfil&lt;/h4&gt;

&lt;p&gt;Em consultoria a procura é específica. Enquanto que numa empresa de webdesign tens de saber HTML, CSS, Javascript e uma linguagem como PHP, neste tipo de projetos procuram profissionais específicos para as linguagens e os requisítios são mais elevados.&lt;/p&gt;

&lt;p&gt;Há requisitos na procura que também justificam os salários mais altos. Por exemplo para um programador C# pode ser pedido:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Desenvolver APIs com a .NET Web API&lt;/li&gt;
  &lt;li&gt;Validar os serviços com testes unitários&lt;/li&gt;
  &lt;li&gt;Utilizar GIT ou outro gestor de código&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para um web designer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Código HTML validado com a W3C&lt;/li&gt;
  &lt;li&gt;Utilizar LESS ou SASS para gerar o código CSS&lt;/li&gt;
  &lt;li&gt;Utilizar um padrão em CSS (por exemplo: BEM)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Existem níveis que classificam a tua posição dentro da empresa. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Júnior - programador com menos de 2 anos de experiência&lt;/li&gt;
  &lt;li&gt;Sénior&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uma dica: se queres trabalhar em consultoria e queres investir em ti então estuda o que mercado mais procura e valoriza! É escusado dizer que quanto mais precisas de aprender, melhor é a recompensa salarial ;)&lt;/p&gt;

&lt;h3 id=&quot;freelancer&quot;&gt;Freelancer&lt;/h3&gt;

&lt;p&gt;Esta área tem esta mais valia em relaçao a muitas outras profissoes. O mercado recorre muito a freelancers e por isso, se investires mesmo em ti consegues trabalhar como freelancer.&lt;/p&gt;

&lt;p&gt;Há aqueles freelancers que só o são por não conseguirem arranjar emprego.&lt;/p&gt;

&lt;p&gt;Aquele programador que não tem experiência séria, num projeto simples sente-se assustado com novas funcionalidades que desconhece possíveis implementações ou que simplesmente demore demasiado tempo a entregar um produto. &lt;/p&gt;

&lt;p&gt;Todos começamos por algum lado, é preciso é continuar.&lt;/p&gt;

&lt;h4 id=&quot;projeto&quot;&gt;Projeto&lt;/h4&gt;

&lt;p&gt;Para aprender a programar web quer uses php, python, c# tens sempre bibliotecas gratuítas que podes usar e desenvolver um projeto. Na fase inicial é uma mais valia ao portfólio e é tido em conta nas entrevistas.&lt;/p&gt;

&lt;p&gt;Seja para um cliente ou para experiência é sempre preciso estruturar e definir toda a preparação do projeto. Há livros a falar da fase de planeamento de um projeto.&lt;/p&gt;

&lt;p&gt;Eu não levo tão asério. Começo em rascunho numa folha de papel, um esquema UML ou a usar um programa de mockups. Primeiro escolho o domínio daquilo que vou desenvolver. O domínio é formado por entidades, por exemplo para um blog as entidades seriam: Article, Comment, User, Review&lt;/p&gt;

&lt;p&gt;Com estas entidades escrevo serviços que vão fazer operações como: ArticleCreate, CommentSend, ReviewEdit, Register, CommentAprove, ArticlePublish, CommentList&lt;/p&gt;

&lt;p&gt;Serviços comuns como NotificationSend, EmailSend que meto à parte. Este esquema depois serve-me como modelo daquilo que vou desenvolver. &lt;/p&gt;

&lt;p&gt;Podes geriar a parte html usando layouts, páginas parciais. Isto é no lado do servidor seja em PHP, C#, python, há frameworks e bibliotecas que auxiliam.&lt;/p&gt;

&lt;p&gt;Outra alternativa é desenvolveres uma SPA - single page application com uma framework como o AngularJS. A parte do cliente (html, css, javascript) fica separada do código do servidor, o backend. No caso de desenvolver uma SPA o ideal é sempre servi-la com uma API. As linguagens modernas têm frameworks boas para implementar APIs.&lt;/p&gt;

&lt;p&gt;Eu recomendo sempre aprenderem angular! Uma aplicação angular pode servir um website ou uma aplicação android a usar phonegap, ionicframework. Podes escrever toda a lógica, serviços num módulo que partilhes no website e aplicação, e depois desenvolves duas aplicações que consumam esse módulo.&lt;/p&gt;

&lt;p&gt;Além que aprendes javascript e html, mesmo que depois venhas a trabalhar no lado do servidor para fazer isto noutros projetos já sabes boas bases e facilmente te adaptas.&lt;/p&gt;

&lt;p&gt;Isto é javascript mas se sabes programar PHP ou C# também sabes javascript. &lt;/p&gt;

&lt;p&gt;Para desenvolver o código temos de seguir uma arquitectura ou pelo menos alguns padrões que asegurem um bom código. &lt;/p&gt;

&lt;p&gt;Eu gosto muito da arquitectura SOA - arquitectura orientada a serviços mas há outras e depende sempre do que fores desenvolver. Um exemplo de uma aplicação dividida em camadas a utilizar a framework Slim em PHP para servir uma API: https://www.guilhermecardoso.pt/software/2014/09/23/arquitectura-padroes.html&lt;/p&gt;

&lt;p&gt;Para implementares funcionalidades como validação de dados, formatação de texto, tratamento de imagens, gestão de ficheiros no sistema podes usar bibliotecas. Cada linguagem tem o seu gestor de dependências como o Nuget em C#, composer em PHP, bower para javascript e css. Ter dependências como bibliotecas geridas por algo assim é melhor, ajuda-te a manter tudo actualizado e torna-se mais fácil a instalação em produção.&lt;/p&gt;

&lt;p&gt;Há serviços que podes contratar como websockets, envio de emails, um sistema de comunicação em grupo. Grande parte das empresas que os prestam vêem de programadores e disponibilizam pacotes gratuítos para projetos startup ou pequenos. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Isto foi escrito pelos Gang Of Four. Não é um livro para um iniciante ler mas se queres aprender a estruturar aplicações e a programar código reutilizável com padrões tens mesmo de ler! - http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented-ebook/dp/B000SEIBB8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apartir daqui vou escrever mais artigos específicos do que falei&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Plano - roadmap a que te comprometas para começares a programar ou evoluires.&lt;/li&gt;
  &lt;li&gt;Curriculum - como te podes apresentar a uma empresa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Começar a programar&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Recursos de aprendizagem&lt;/li&gt;
  &lt;li&gt;Escolher uma linguagem de programação&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Freelancer&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O teu primeiro projeto real&lt;/li&gt;
  &lt;li&gt;Estrutares a base da tua equipa de modo a que outros programadores possam desenvolver e rentabilizar o tempo&lt;/li&gt;
  &lt;li&gt;Propostas de orçamentos&lt;/li&gt;
  &lt;li&gt;Divulgação&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Referências Futuras&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://programmer-hek.blogspot.pt/2014/07/which-type-of-it-career-is-best-for-you.html&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate>
				<link>http://www.codigo.ovh/programacao/2014/10/28/profissoes.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/programacao/2014/10/28/profissoes.html</guid>
			</item>
		
			<item>
				<title>Segurança Online - Navegação</title>
				<description>&lt;h3 id=&quot;tor---navegar-em-annimo&quot;&gt;Tor - Navegar em anônimo&lt;/h3&gt;

&lt;p&gt;Como me dizia um amigo, a “cebolinha”! O Tor é uma rede que podemos utilizar para navegar anonimamente na internet. É a rede utilizada por hackers para realizar ataques, para fazer pagamentos online, autenticar em serviços numa rede pública ou simplesmente enganar aquele sistema de votação online.&lt;/p&gt;

&lt;p&gt;O tráfego é transmitido de forma encriptada e passado entre vários computadores e servidores espalhados pelo mundo.&lt;/p&gt;

&lt;p&gt;Como está licenciado como open source já começam a aparecer mais soluções a utilizar esta comunicação e a tornar-se ainda mais popular.&lt;/p&gt;

&lt;h3 id=&quot;tor-navegadorhttpswwwtorprojectorgprojectstorbrowserhtmlen&quot;&gt;&lt;a href=&quot;https://www.torproject.org/projects/torbrowser.html.en&quot;&gt;Tor Navegador&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Este browser é uma versão modificada do Firefox e está disponível para Windows, Linux e Mac. Há extensões para o Firefox para puderes usar a rede Tor com esse browser, mas se preferires podes usar este.&lt;/p&gt;

&lt;p&gt;Não aconselho instalar extensões no navegador como no fazemos no Chrome por exemplo. Essas extensões têm de estar preparadas para utilizar a rede Tor, e nem todas estão o que implica que o tráfego dessa extensão não é anónimo. O mesmo se aplica a outros programas do computador, apenas o navegador utiliza esta rede para comunicar. &lt;/p&gt;

&lt;h3 id=&quot;orbothttpsguardianprojectinfoappsorbot&quot;&gt;&lt;a href=&quot;https://guardianproject.info/apps/orbot/&quot;&gt;Orbot&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-tor1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta aplicação permite utilizar a rede Tor num telemovel. Muito bom!&lt;/p&gt;

&lt;p&gt;Quando utilizar? Se estiveres a procurar o resultado do Benfica - Sporting, certamente não precisas de “esconder” isso. A rede Tor é mais lenta e também não é bom sobre carregá-la sem necessidade. Se fores ao site da Caixa Geral Deposítos realizar uma transferência já seria uma boa ideia usar, assim como se fores entrar no teu email no café apenas para ver se recebes-te algo.&lt;/p&gt;

&lt;h3 id=&quot;http-vs-https&quot;&gt;HTTP vs HTTPS&lt;/h3&gt;

&lt;p&gt;Alguns sites têm um cadeado na barra de tarefas do browser, normalmente verde mas também pode ser amarelo ou vermelho.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-ssl1.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esse cadeado é apresentado em sites com o protocolo https que utiliza SSL para encriptar as comunicações com chaves. Outro exemplo é o facebook, google, spotify, youtube.&lt;/p&gt;

&lt;p&gt;Recentemente foi publicada uma falha neste protocólo que põs em causa a segurança de vários sistemas e muitos se questionaram sobre estes certificados serem ou não uma prova de segurança. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tem preferência por sites com comunicações seguras&lt;/strong&gt;. Certificados SSL não são nenhum investimento gigante para sites, sejam de serviços ou comunidades até. Eu utilizo no meu e não lido com informação importante, considera estranho o facto de um site conhecido não usar nenhum certificado.&lt;/p&gt;

</description>
				<pubDate>Thu, 16 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/bower/2014/10/16/seguran-online-navegacao.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/bower/2014/10/16/seguran-online-navegacao.html</guid>
			</item>
		
			<item>
				<title>Segurança Online - Password</title>
				<description>&lt;p&gt;O problema de passwords fracas é que são facilmente identificadas por ataques brute-force. Uma password que seja construída por sequências ou palavras óbvias torna-se vulnerável a este tipo de ataques. Alguns exemplos para o João Marques nascido a 31/10/1960.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;123_joao_321&lt;/li&gt;
  &lt;li&gt;asdasd&lt;em&gt;joao&lt;/em&gt;asdasd&lt;/li&gt;
  &lt;li&gt;qwer123_31_qwe123&lt;/li&gt;
  &lt;li&gt;1960&lt;em&gt;10&lt;/em&gt;31&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estas passwords são vulneráveis a brute-force. Se for uma vítima específica, o hacker vai usar as tais palavras óbvias como o nome dos pais, filhos, morada, localidade.&lt;/p&gt;

&lt;p&gt;Também é comum utilizar a mesma password para serviços diferentes e apenas diferir numa palavra que identifique esse serviço. No exemplo de cima, para o Facebook e Google seria:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;123_joao_321-facebook&lt;/li&gt;
  &lt;li&gt;123_joao_321-google&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podemos concluír que para descubrir a password um hacker pode tentar várias tentativas até usando palavras chaves que de certa forma se identifiquem a nós.&lt;/p&gt;

&lt;p&gt;Assim a solução para uma password é não utilizar-mos nenhuma sequência ou melhor ainda: uma password que nem nós saibamos! Uma palavra construída por um programa que pode ser instalado no computador ou telemovel, e seja gerada apartir de uma lógica.&lt;/p&gt;

&lt;h2 id=&quot;usuabilidade&quot;&gt;Usuabilidade&lt;/h2&gt;

&lt;p&gt;Quando tens dezenas de contas registadas em serviços como email, redes sociais, portais, o mais comum é a password ser sempre a mesma. Até podes usar diferentes mas cada uma atribúida a níveis diferentes de segurança (mais complexas para serviços mais sensíveis).&lt;/p&gt;

&lt;p&gt;Não é prático termos dezenas de passwords diferentes que tenhamos de decorar sempre. &lt;/p&gt;

&lt;h2 id=&quot;como-utilizar-a-password&quot;&gt;Como utilizar a password&lt;/h2&gt;

&lt;p&gt;O primeiro passo que fazes é sempre autenticares-te. Se for num site como o Facebook, a opção para manter a sessão iniciada após a autenticação pode ser uma vulnerabilidade em redes que não sejam confiáveis. Isto porque esta opção guarda uma espécie de palavra super secreta que pode ser usada durante X dias para entrar no Facebook sem teres de te ligar sempre. Esta palavra expira depois desses dias, são os tokens (no caso do Facebook providos por OAuth 2).&lt;/p&gt;

&lt;p&gt;Se estiveres ligado á internet de tua casa, podes partir do princípio que podes guardar a sessão iniciada. Estás numa rede conhecida e se alguém a invadir a tua conta do Facebook deve ser a menor das preocupações.&lt;/p&gt;

&lt;p&gt;Numa rede pública como um café inverte-se claro. Nessa rede pode aceder qualquer um que tenha o acesso, acesso esse que não é controlado por ti. Podes ser vítima de um roubo da palavra super secreta que falei. Essa palavra está guardada no teu computador (para ser usada para entrar no Facebook sem te autenticares sempre), possivelmente numa cookie facilmente acedida. Quem roubar essa palavra, consegue entrar na tua conta sem precisar de se autenticar.&lt;/p&gt;

&lt;p&gt;**Nunca guardes a sessão iniciada automaticamente numa rede pública. Se procurares mesmo segurança, então nunca a guardes em nenhuma rede.&lt;/p&gt;

&lt;h2 id=&quot;master-password-app&quot;&gt;Master Password App&lt;/h2&gt;

&lt;p&gt;Este é o programa que recomendo para gerires a tua password. Este programa gera uma palavra através de um algoritmo, isto significa que ela não é guardada em nenhum lado.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-pw-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O Master Password pode ser instalado como uma aplicação mobile, um programa no computador ou até mesmo usado em código.&lt;/p&gt;

&lt;p&gt;No caso de uma password importante que apenas uses algumas vezes por dia (o acto da autenticação e não o serviço em si), tendo esta aplicação instalada é uma mais valia e evita que guardes passwords.&lt;/p&gt;

&lt;p&gt;Nesse exemplo a palavra t33t que facilmente seria descoberta por um hacker, sendo encriptada com o algoritmo transformou-se em w1=rD9YhWahxArZydD8b.&lt;/p&gt;

&lt;h2 id=&quot;google-security-key&quot;&gt;Google Security Key&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-pw-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A Google tomou um passo importante ao promover a autenticação de dois passos. Primeiro autenticas-te com a password e depois receber um código de confirmação através de uma sms, chamada de voz ou uma aplicação própria para isso. Esse código de confirmação é o segundo passo na autenticação.&lt;/p&gt;

&lt;p&gt;Além de usar um código de confirmação no segundo passo, agora é possível usar uma pen drive, a chamada &lt;strong&gt;Security Key for 2-Step verification&lt;/strong&gt;. Por enquanto esta autenticação apenas é possível através do Chrome na versão 38 (muito recente ainda).&lt;/p&gt;
</description>
				<pubDate>Wed, 15 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/bower/2014/10/15/seguranca-online-password.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/bower/2014/10/15/seguranca-online-password.html</guid>
			</item>
		
			<item>
				<title>Variáveis de ambiente e locais no Unix</title>
				<description>&lt;p&gt;No UNIX os softwares são mais flexíveis que Windows, o comportamente de um programa pode ser alterado apenas por alterar uma variável. Além de caminhos para pastas, as variáveis de ambiente podem ter opções de linha de comandos, ou flags (EMAILS_ENABLED, COMMENTS_ALLOWED).&lt;/p&gt;

&lt;p&gt;As variáveis de ambiente ou globais guardam informação partilhada por programas como caminhos para determinadas pastas (variável HOME com C:\Users\Gui). São sempre escritas em maiúsculas, semelhantemente em linguagens de programação as constantes são escritas em maísculas e podem desempenhar uma função semelhante, apesar de isto ser uma convenção e não uma regra.&lt;/p&gt;

&lt;p&gt;No terminal é indiferente se as variáveis seguem esta com convenção ou não, as de ambiente da shell actual são herdadas por todos os shells filhos. &lt;/p&gt;

&lt;p&gt;Também existem as variáveis são as variáveis do shell, as locais. Estas são escritas em minúsculas e não são herdadas pelos filhos.	&lt;/p&gt;

&lt;h3 id=&quot;principais&quot;&gt;Principais&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;PATH&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Contém o caminho para pastas com ficheiros de sistema (equivalente no Windows ao programa.exe). Os programas que executas na consola, ls, node, grunt, mkdir, tanto podem ter o executável na /usr/local/bin que já está na variável PATH normalmente, ou numa pasta /opt/spotify-client que seria adicionado á PATH.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOME&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O caminho absoluto para o teu directorio home, por exemplo /home/maria Programas usam-na para guardarem ficheiros de configuração de cada utilizador do sistema na sua pasta home ou o comando &lt;strong&gt;cd ~&lt;/strong&gt; que usa a variável para ir para a HOME.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USERNAME&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nome do utilizador autenticado na shell.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TERM&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tipo de terminal usado para aceder ao sistema&lt;/p&gt;

&lt;h3 id=&quot;como-usar&quot;&gt;Como usar&lt;/h3&gt;

&lt;p&gt;Uma variável é atribuida por VARIAVEL=VALOR&lt;/p&gt;

&lt;p&gt;Por vezes podemos usar o valor da variável para atribuir a um novo valor, exemplo seria adicionar a pasta /opt/bible-king-james á variável PATH.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dk@localhost:/&lt;span class=&quot;nv&quot;&gt;$ PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/opt/bible-king-james
dk@localhost:/&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/opt/GitEye/:/opt/bible-king-james/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Na PATH adicionei o caminho aseguir a $PATH, a variável que com o valor actual dos os restantes caminhos.&lt;/p&gt;

&lt;p&gt;Quando executarmos um programa ele procura primeiro na pasta /usr/local/bin, senão existir na /usr/bin, e consecutivamente. Se adicionasse no início, esse caminho seria o primeiro a ser usado&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dk@localhost:/opt/sublime&lt;span class=&quot;nv&quot;&gt;$ PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/bible-king-james:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
dk@localhost:/opt/sublime&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
/opt/bible-king-james:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/opt/GitEye/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Se usassemos apenas atribuição com PATH não seria bom, por exemplo: PATH=/opt/bibke-king-james. Ness momento quando executasses um programa no shell ele apenas seria procurado nesse novo caminho. Comandos como cd, ls, não estaríam disponíveis.&lt;/p&gt;

&lt;h3 id=&quot;onde-usar&quot;&gt;Onde usar&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;~/.bashrc apenas são acessível pelo bash em sim como configurações do shell, consola. Aqui não guardamos variáveis utilizadas por programas porque não lêem este ficheiro, apenas o shell do bash.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;~/.profile aplicado á sessão inteira, como programas que são executados no arranque da sessão&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;~/.bash_profile&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Fri, 10 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/linux/2014/10/10/linux-variaveis-de-ambiente.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/linux/2014/10/10/linux-variaveis-de-ambiente.html</guid>
			</item>
		
			<item>
				<title>PHP - Biblioteca</title>
				<description>&lt;p&gt;Neste artigo vou explicar como podes reutilizar código criando uma biblioteca que seja partilhada. Esta biblioteca vai ter como dependência a biblioteca Respect, que é utilizada para validação.&lt;/p&gt;

&lt;h3 id=&quot;composer&quot;&gt;Composer&lt;/h3&gt;

&lt;p&gt;Para gerir dependências em PHP o composer é o gestor de eleição. Não é nenhum programa que tenhas de distribuir com a biblioteca mas sim um gestor de dependências.&lt;/p&gt;

&lt;p&gt;Na raíz da aplicação (no directorio bible) criamos o ficheiro composer.json. Este ficheiro contém a informação necessária ao composer para reconhecer a biblioteca, as suas dependências e outras informações importantes como a utilização de PSR.&lt;/p&gt;

&lt;p&gt;Exemplo de um ficheiro composer.json&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
	&quot;name&quot;: &quot;o-teu-nome/biblioteca&quot;,
    &quot;config&quot;: {
        &quot;vendor-dir&quot;: &quot;src/vendor&quot;
    },
    &quot;require&quot;: {
        &quot;respect/validation&quot;: &quot;dev-master&quot;
    },
    &quot;autoload&quot;: {
        &quot;psr-0&quot;: {
            &quot;Bible&quot;: &quot;./src&quot;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No vendor-dir indicamos o directorio onde as dependências vão ser instaladas. Como a biblioteca vai ficar em /bible/src/Bible deixamos as dependências em /bible/src/vendor&lt;/p&gt;

&lt;p&gt;O autoload permite-nos indicar onde está a biblioteca, isto é necessário para que as aplicações a consumam. O composer precisa de saber onde está situada a biblioteca porque em nenhuma parte do código vamos referenciar directamente este caminho. As dependências são da responsabilidade do composer, nós apenas precisamos de ter tudo bem registado e incluindo o ficheiro autoload.php que se encontra dentro da pasta bible/src/vendor.&lt;/p&gt;

&lt;h3 id=&quot;a-biblioteca&quot;&gt;A biblioteca&lt;/h3&gt;

&lt;p&gt;Esta biblioteca vai ser simples. Vamos chamar-lhe &lt;em&gt;Bible&lt;/em&gt; e tem como função prover serviços que procurem versículos na biblia. Vão ser dois ficheiros: o serviço VerseService e uma classe utilitária VerseFormat para formatar-mos os versos.&lt;/p&gt;

&lt;p&gt;O ficheiro bootstrap.php é responsável por carregar todas as dependências da biblioteca e configurações primárias.&lt;/p&gt;

&lt;p&gt;bible
bible/src
bible/src/bootstrap.php
bible/src/Bible
bible/src/Bible/Services
bible/src/Bible/Services/VerseService.php
bible/src/Bible/Helpers
bible/src/Bible/Helpers/VerseFormat.php&lt;/p&gt;

&lt;p&gt;A pasta src indica source - o directório onde está todo o código da Biblioteca. Outras pasta de primeiro nível além da src poderiam ser:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docs -  para documentação&lt;/li&gt;
  &lt;li&gt;examples - para exemplos de como utilizar a biblioteca.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;aplicao-cliente&quot;&gt;Aplicação Cliente&lt;/h3&gt;

&lt;p&gt;Esta é a aplicação que vai consumir a biblioteca. Enquanto que a biblioteca indica o autoload e as dependências, o cliente tem de indicar como dependência a biblioteca e as dependências da biblioteca (neste exemplo o respect/validation) também são automáticamente instaladas.&lt;/p&gt;

&lt;p&gt;O cliente tem de ter um ficheiro composer.json também&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;config&quot;: {
        &quot;vendor-dir&quot;: &quot;src/vendor&quot;
    },
    &quot;require&quot;: {
        &quot;respect/validation&quot;: &quot;dev-master&quot;,
        &quot;o-teu-nome/biblioteca&quot;: &quot;dev-master&quot;
    },
    &quot;autoload&quot;: {
        &quot;psr-0&quot;: {
            &quot;Bible&quot;: &quot;./src&quot;
        }
    },
    &quot;repositories&quot;: [{
        &quot;type&quot;: &quot;vcs&quot;,
        &quot;url&quot;: &quot;git@bitbucket.org:o-teu-nome/biblioteca.git&quot;
    }]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O composer tem um registo publico da mesma forma que o bower mas neste exemplo a biblioteca é privada, por isso indicamos no &lt;strong&gt;repositories&lt;/strong&gt; a localização. &lt;/p&gt;

&lt;p&gt;O dev-master é o ramo GIT que queremos utilizar. Poderia ser&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;master&lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;(para o mais recente apenas)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vai depender da forma como gerires o GIT. Eu gosto de manter a mesma versão da biblioteca com a tag do Git para criar versões 0.1, 0.1.1&lt;/p&gt;

&lt;h3 id=&quot;actualizao&quot;&gt;Actualização&lt;/h3&gt;

&lt;p&gt;Neste exemplo temos um cliente a utilizar a biblioteca mas podem ser N. A utilização do composer é também para gerir as actualizações de uma forma muito simples: alteramos a biblioteca e enviamos todas as alterações para o versionador de código (GIT). Os clientes depois actualizam as dependências com &lt;strong&gt;composer update&lt;/strong&gt;&lt;/p&gt;

</description>
				<pubDate>Fri, 10 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/bower/2014/10/10/criar-uma-biblioteca-em-php.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/bower/2014/10/10/criar-uma-biblioteca-em-php.html</guid>
			</item>
		
			<item>
				<title>Manifesto de 1986 - The Conscience of a Hacker</title>
				<description>&lt;p&gt;Um manifesto escrito em 1986 por um hacker. Considero-o uma introdução obrigatória para quem quer perceber o que é um hacker afinal de contas. É necessária a educação ética nesta área para quem a quer estudar, e assim não deixar o ego crescer demasiado e tornar-se num pseudo black hat.&lt;/p&gt;

&lt;p&gt;No filme The Social Network, no quarto do Mark Zuckerberg está um poster a branco e verde, é o mesmo manifesto&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/hacker-manifest2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A ideia criada pela media dá-nos a entender que um hacker é criminoso pois rouba informação. E tudo começa aqui, o erro da presunção que um hacker é de facto alguém mau.&lt;/p&gt;

&lt;p&gt;Este manifesto foi escrito pelo The Mentor, de nome Loyd Blankenship após a sua detenção. É importante notar na crítica ao sistema de educação, que tantos anos depois se mantém.&lt;/p&gt;

&lt;p&gt;Eu tenho o 9º ano de escolaridade e não terminei o secundário nem frequentei nenhum curso superior para aprender a programar. No entanto sou desfavorecido salarialmente e discriminado em várias situações que ter o 9º ano corresponde a ser um insucesso escolar.&lt;/p&gt;

&lt;p&gt;A mim foi necessário estudar sozinho para chegar aqui, não limites as tuas escolhas pelo que o sistema te oferece. Prefiro ser um insucesso escolar do que ser mais uma pomba no marquês de pombal.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/hacker-manifesto1.jpg&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
The following was written shortly after my arrest...

                       \/\The Conscience of a Hacker/\/

                                      by

                               +++The Mentor+++

                          Written on January 8, 1986
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

        Another one got caught today, it's all over the papers.  &quot;Teenager
Arrested in Computer Crime Scandal&quot;, &quot;Hacker Arrested after Bank Tampering&quot;...
        Damn kids.  They're all alike.

        But did you, in your three-piece psychology and 1950's technobrain,
ever take a look behind the eyes of the hacker?  Did you ever wonder what
made him tick, what forces shaped him, what may have molded him?
        I am a hacker, enter my world...
        Mine is a world that begins with school... I'm smarter than most of
the other kids, this crap they teach us bores me...
        Damn underachiever.  They're all alike.

        I'm in junior high or high school.  I've listened to teachers explain
for the fifteenth time how to reduce a fraction.  I understand it.  &quot;No, Ms.
Smith, I didn't show my work.  I did it in my head...&quot;
        Damn kid.  Probably copied it.  They're all alike.

        I made a discovery today.  I found a computer.  Wait a second, this is
cool.  It does what I want it to.  If it makes a mistake, it's because I
screwed it up.  Not because it doesn't like me...
                Or feels threatened by me...
                Or thinks I'm a smart ass...
                Or doesn't like teaching and shouldn't be here...
        Damn kid.  All he does is play games.  They're all alike.

        And then it happened... a door opened to a world... rushing through
the phone line like heroin through an addict's veins, an electronic pulse is
sent out, a refuge from the day-to-day incompetencies is sought... a board is
found.
        &quot;This is it... this is where I belong...&quot;
        I know everyone here... even if I've never met them, never talked to
them, may never hear from them again... I know you all...
        Damn kid.  Tying up the phone line again.  They're all alike...

        You bet your ass we're all alike... we've been spoon-fed baby food at
school when we hungered for steak... the bits of meat that you did let slip
through were pre-chewed and tasteless.  We've been dominated by sadists, or
ignored by the apathetic.  The few that had something to teach found us will-
ing pupils, but those few are like drops of water in the desert.

        This is our world now... the world of the electron and the switch, the
beauty of the baud.  We make use of a service already existing without paying
for what could be dirt-cheap if it wasn't run by profiteering gluttons, and
you call us criminals.  We explore... and you call us criminals.  We seek
after knowledge... and you call us criminals.  We exist without skin color,
without nationality, without religious bias... and you call us criminals.
You build atomic bombs, you wage wars, you murder, cheat, and lie to us
and try to make us believe it's for our own good, yet we're the criminals.

        Yes, I am a criminal.  My crime is that of curiosity.  My crime is
that of judging people by what they say and think, not what they look like.
My crime is that of outsmarting you, something that you will never forgive me
for.

        I am a hacker, and this is my manifesto.  You may stop this individual,
but you can't stop us all... after all, we're all alike.

                               +++The Mentor+++
_________________________________________________________&lt;/pre&gt;
</description>
				<pubDate>Thu, 02 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/hack/2014/10/02/hacker-manifesto.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/hack/2014/10/02/hacker-manifesto.html</guid>
			</item>
		
			<item>
				<title>Scripts shell</title>
				<description>&lt;p&gt;O bash é não é uma linguagem de programação mas sim um interpretador de comandos. Quando na consola escrevemos um comando o bash interpreta-o executando-o.&lt;/p&gt;

&lt;p&gt;Shell scripts é uma linguagem de script usada em vários sitemas operativos em bash. Um exemplo pode ser o ficheiro &lt;strong&gt;configure&lt;/strong&gt; gerado nas instalações de software ou um qualquer outro ficheiro .sh. É script pois é um programa escrito em linguagem interpretada como em Python ou Javascript, não é compilada como em C#.&lt;/p&gt;

&lt;p&gt;No caso de um programador, temos tarefas comuns como apagar um directori e clonar outro, um script que abra o chrome, um cliente de emails, verifique se há notificações de emails ou redes sociais, etc.&lt;/p&gt;

&lt;p&gt;No fundo um script shell vai executar o que pretender-mos. Como exemplo temos o copiar-tese.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
###
# Copiar Tese para pendrive
#
# @description Este script copia todos os documentos da tese para uma pendrive
# @author Guilherme Cardoso &amp;lt;email@guilhermecardoso.pt&amp;gt;
###
cp ~/trabalhos/tese /dev/sda2/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Os comentários não são obrigatórios, apenas na primeira linha para indicar que é um script bash. Os outros sigo a norma mais comum: titulo, descrição, autor. Mesmo em scripts que sei que mais ninguém vai usar documento-os, até porque sou mesmo esquecido.&lt;/p&gt;

&lt;p&gt;** Dica ** Na linha de comandos também podemos executar vários comandos intercalados. Para isso separamos cada comando com &amp;amp;&amp;amp;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir bible &amp;amp;&amp;amp; cd bible &amp;amp;&amp;amp; cp /tmp/bible.db bible.db
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;permisso&quot;&gt;Permissão&lt;/h2&gt;

&lt;p&gt;Os scripts bash têm de ter permissão para serem executados. É atribuida com o chmod&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x copiar-tese.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;correr-scripts&quot;&gt;Correr scripts&lt;/h2&gt;

&lt;p&gt;Podem ser executados com o comando sh ou usando ./&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./copiar-tese.sh
sh copiar-tese.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Além de serem executados também podemos usar o comando &lt;strong&gt;source&lt;/strong&gt;. A diferença é que o source vai correr os comandos na shell actual e executar corre os comandos numa nova shell. Por exemplo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
PATH = $PATH:/opt/bible/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este comando vai copiar para a variável de ambiente PATH o caminho /opt/bible/bin, e os executáveis dentro da pasta bin ficam acessíveis pelo terminar por estarem na PATH. &lt;/p&gt;

&lt;p&gt;Se executarmos o script (./set-path.sh ou sh set-path.sh) a variável PATH não foi alterada na shell em que nos encontramos, se digitares no terminal echo $PATH ele não retorna com /opt/bible/bin&lt;/p&gt;

&lt;p&gt;Se abrires uma nova shell a variável já está actualizada. Se em vez de executares usares &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source set-path.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O script é executado e as alterações são realizadas na shell actual. Isto é porque o source serve para actualizar ficheiros de configuração, e uma das actualizações são as variáveis de ambiente.&lt;/p&gt;

&lt;p&gt;O comando da linha 10 apenas é executado se na linha 9 não houve nenhuma excepção. Isto permite executar comandos em cadeia e é alias algo que fazemos naturalmente quando removemos uma pasta, criamos uma nova e copiar conteudo de outro. &lt;/p&gt;

&lt;p&gt;Em técnicas de invasão um script shell pode fazer uma ligação ssh, comprimir arquivos, copiar tokens do Facebook, copiar os registos do keylogger.&lt;/p&gt;

&lt;h3 id=&quot;algumas-dicas&quot;&gt;Algumas dicas&lt;/h3&gt;

&lt;p&gt;Em bash o “*” tem um significado próprio. Se executares um script que aceite * é preciso escapar com \ Por exemplo o redis-cli que é um cliente para a base de dados redis, executamos a aplicação redis-cli e entramos numa shell de acesso ao Redis. Para escrever um script que execute um comando nessa shell teria de ser&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis-cli keys \*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Isto seria igual a entrar no redis-cli e depois escrever na shell keys *&lt;/p&gt;

&lt;p&gt;O nohup é um comando que ignora o sinal HUP. Quando terminamos a sessão na shell, o sinal HUP avisa os processos dependentes que são terminados.&lt;/p&gt;

&lt;p&gt;Com este comando, mesmo após terminar a sessão o processo continua a ser executado.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nohup ./run-backgroundjob.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por defeito o retorno é guardado no ficheiro nohup.out, tanto os avisos como os erros. Podemos descartar por completo o retorno enviando-o para /dev/null&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nohup ./resque-scheduler.sh &amp;gt;&amp;amp; /dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Por outro lado podemos querer descantar o retorno normal e apenas guardar os erros, isso é alcançado removendo o &amp;amp;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nohup ./resque-scheduler.sh &amp;gt; /dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
</description>
				<pubDate>Wed, 01 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/linux/2014/10/01/shell-scripts.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/linux/2014/10/01/shell-scripts.html</guid>
			</item>
		
			<item>
				<title>Shell</title>
				<description>&lt;p&gt;A shell é um interpretador de linha de comandos que disponibilia uma interface de usuário para sistemas *nix. Tu escolhes a operação a ser realizada através do comando que escreves e o interpretador executa, ou através de scripts shell. http://guilhermecardoso.pt/linux/2014/10/01/shell-scripts.html&lt;/p&gt;

&lt;p&gt;A consola que o Linux traz instalada é um emulador de terminal e permite-nos abrir uma nova shell. As shells também podem ser utilizadas por ligações de hardware ou sessões de rede.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/shell-emulator-1.jpg&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 01 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/linux/2014/10/01/shell.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/linux/2014/10/01/shell.html</guid>
			</item>
		
			<item>
				<title>Instalar softwares em Linux</title>
				<description>&lt;p&gt;Como se instala um software? Extrais o código e corres numa linha de comandos: ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo install&lt;/p&gt;

&lt;p&gt;Simples. Agora a explicação.&lt;/p&gt;

&lt;p&gt;No Windows fazes download de software já compilado e pronto a ser executado para a arquitectura certa. Alguns instaladores lidam com essa tarefa e o mesmo instalador instala versões diferentes, outros softwares são distribuídos para arquitecturas diferentes, por exemplo quando na página de download tens disponíveis as versões x86 para 32 bits e x64 para 64 bits para download.&lt;/p&gt;

&lt;p&gt;No Linux há softwares distribuídos assim - os pacotes .deb em debian e .rpm em Fedora. Mas isto é uma pequena parte comparado com o software disponível que é opensource e muito dele mantido apenas por amor do programador aos utilizadores. Nesses casos não há tempo para disponibilizar estes pacotes.&lt;/p&gt;

&lt;p&gt;Também hà software disponibilizado por repositórios que podem ser instalados com o apt ou yum. Podes ver mais aqui: (https://guilhermecardoso.pt/ide/software/2014/09/18/linux-software-versoes-chaves.html)[https://guilhermecardoso.pt/ide/software/2014/09/18/linux-software-versoes-chaves.html]&lt;/p&gt;

&lt;p&gt;Mais tarde ou mais cedo chega a altura em que é bom perceber como se compila os softwares em Linux, eu ainda configurei muitos servidores sem o entender bem.&lt;/p&gt;

&lt;p&gt;Código - O código do software é distribuído em ficheiros comprimidos, sistemas GIT, ftp, entre outros. Normalmente fazes download do ficheiro comprimido, por exemplo “spotify-client-test-0.1.tar.gz”&lt;/p&gt;

&lt;p&gt;Se for em linhas de comandos, os arquivos .tar.gz descomprimem-se com:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -xvfz spotify-client-test-0.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Isto cria uma nova directoria, neste caso &lt;strong&gt;spotify-client-test-0.1&lt;/strong&gt;. Ela deve ter um ficheiro README e outro INSTALL. Nestes documentos de texto os desenvolvedores explicam como instalar, que dependências existem, problemas comuns. &lt;/p&gt;

&lt;h3 id=&quot;configure&quot;&gt;./configure&lt;/h3&gt;

&lt;p&gt;Este comando executa o script &lt;strong&gt;configure&lt;/strong&gt; que vai certificar que o sistema operativo tem todas as dependências necessárias para que o software seja instalado. Dependendo do software o retorno do comando pode ser mais ou menos informativo.&lt;/p&gt;

&lt;p&gt;Normalmente explica a biblioteca em falta e sugere pacotes a serem instalados. Em casos de erros conseguimos ver sempre o ficheiro e ir lá inspecionar por nós.&lt;/p&gt;

&lt;p&gt;No final o script cria um ficheiro &lt;strong&gt;MAKEFILE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ele pode gerar o script e mesmo assim ter enviado erros, é preciso ter atenção a isso. &lt;/p&gt;

&lt;p&gt;O parametro prefix indica o destino da instalação quando instalarmos. Esse destino é pré defenido pelo sistema mas pode ser alterado&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./configure --prefix=/usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;make&quot;&gt;make&lt;/h3&gt;

&lt;p&gt;O make é um software utilitário que existe em quase todos os sistemas Unix.&lt;/p&gt;

&lt;p&gt;Este utilitário procura um script &lt;strong&gt;MAKEFILE&lt;/strong&gt; para compilar todo o código do programa e criar os executáveis. É possível que certas partes do código requiram que outras partes do código já estejam prontas, é esta a função da Makefile. Define a sequência para os eventos para que o programa não acuse dependências em falta.&lt;/p&gt;

&lt;p&gt;O makefile tem vários nomes para secções diferentes. É possível que o controlo seja pasasdo para diversas secções dentro do Makefile ou é possível que no fim de uma secção haja um comando para ir para outra.&lt;/p&gt;

&lt;p&gt;O melhor exemplo que temos é o &lt;strong&gt;install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se o comando &lt;strong&gt;make&lt;/strong&gt; correr com sucesso então a instalação está quase completa.&lt;/p&gt;

&lt;h3 id=&quot;make-install&quot;&gt;make install&lt;/h3&gt;

&lt;p&gt;Quando corres o make sem nenhum parametro, a instrução no Makefile começa a executar do início e consoante as regras defenidas dentro do Makefile. Quando corres make com install como parâmetro, o utilitário make procura por uma secção chamada install dentro do Makefile, e executa apenas essa secção.&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;make&lt;/strong&gt; os executáveis e outros ficheiros são compilados, a secção install copia esses executáveis e outros ficheiros para os directórios finais do sistema.&lt;/p&gt;

&lt;p&gt;Os executáveis podem ser copiados para o /usr/local/bin para ser acedido por todos os utilizadores. O make apenas os gera, a secção install é que os copia.&lt;/p&gt;

&lt;h3 id=&quot;autogen&quot;&gt;autogen&lt;/h3&gt;

&lt;p&gt;http://www.codecoffee.com/tipsforlinux/articles/27.html&lt;/p&gt;

</description>
				<pubDate>Tue, 30 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/linux/2014/09/30/linux-instalar-softwares.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/linux/2014/09/30/linux-instalar-softwares.html</guid>
			</item>
		
			<item>
				<title>Linux</title>
				<description>&lt;p&gt;Daqui vou dividir em vários artigos com o tempo.&lt;/p&gt;

&lt;h2 id=&quot;distribuies&quot;&gt;Distribuições&lt;/h2&gt;

&lt;p&gt;O mais óbvio é começar pela escolha de uma distribuição. Existem vários distribuições com objectivos diferentes, a escolha depende sempre daquilo que o sistema operativo precisar de fazer. &lt;/p&gt;

&lt;p&gt;Senão souberes qual distribuição escolher começa pelo Ubuntu. Á medida que fores conhecendo melhor o Linux vais-te identificando com outras distribuições.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-responsive&quot; src=&quot;/media/posts/linux-ubuntu1.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;windows-e-linux&quot;&gt;Windows e Linux&lt;/h2&gt;

&lt;p&gt;A estrutura do sistema é importante porque te dá uma ideia de como as coisas funcionam em Linux&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/bin/ - Binários essenciais &lt;/li&gt;
  &lt;li&gt;/boot/ - Ficheiros estáticos do boot loader. Estes ficheiros são utilizados durante o processo de boot-up, incluindo a Kernel kernel do Linux&lt;/li&gt;
  &lt;li&gt;/dev/ - Ficheiros de dispositivos. Contém ficheiros de dispositivos para todo o hardware de dispositivos existentes como um leitor de CD, CPU&lt;/li&gt;
  &lt;li&gt;/etc/ - Configurações específicas do sistema&lt;/li&gt;
  &lt;li&gt;/home/ - As directorias home dos utilizadores &lt;/li&gt;
  &lt;li&gt;/lib/ - Bibliotecas e módulos da kernel essenciais que são partilhados&lt;/li&gt;
  &lt;li&gt;/media/ - Os media removíveis (pen drive) são montados aqui&lt;/li&gt;
  &lt;li&gt;/mnt/ - Ponto de montagem para sistemas temporariamente montados&lt;/li&gt;
  &lt;li&gt;/opt/ - Sítio alternativo onde os softwares instalados por pacotes alternativos são instalados&lt;/li&gt;
  &lt;li&gt;/sbin/ - Binários do sistema&lt;/li&gt;
  &lt;li&gt;/srv/ - Dados para serviços que o sistema disponibiliza&lt;/li&gt;
  &lt;li&gt;/tmp/ - Ficheiros temporários&lt;/li&gt;
  &lt;li&gt;/usr/ - Utilitários e aplicações dos utilizadores&lt;/li&gt;
  &lt;li&gt;/var/ - Ficheiros variáveis&lt;/li&gt;
  &lt;li&gt;/root/ - O directório home do root&lt;/li&gt;
  &lt;li&gt;/proc/ - Documentação vertical do sistema e estado de processos como ficheiros de texto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A comparação com o Windows&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows - Contém todos os ficheiros necessários do sistema operativo. Tudo que percenta ao sistema operativo apenas fica aqui&lt;/li&gt;
  &lt;li&gt;Users - Os perfis de utilizador&lt;/li&gt;
  &lt;li&gt;Boot - Ficheiros do boot loader&lt;/li&gt;
  &lt;li&gt;ProgramData - Ficheiros das instalações, dados guardados por aplicações&lt;/li&gt;
  &lt;li&gt;Recovery - Contém a imagem necessária para entrar na consola de recuperação&lt;/li&gt;
  &lt;li&gt;$recycle.bin - Esta pasta é a reciclagem do Windows, é para aqui que todos os ficheiros removidos vão. Apagar a pasta é igual a esvaziar a reciclagem ou parte dela (cada partição tem a sua própria $recycle.bin, a reciclagem no Windows pode conter ficheiros de diferentes partições)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows utiliza barra para trás, o Linux é para a frente&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Windows\system32

/usr/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O que reparamos logo é que no Windows existem letras para os dispositivos e partições, no Linux está tudo dentro do /. No Windows isto também é possível mas não é assim que ele está preparado.&lt;/p&gt;

&lt;h3 id=&quot;apagar-ou-modificar-ficheiros-abertos&quot;&gt;Apagar ou modificar ficheiros abertos&lt;/h3&gt;

&lt;p&gt;Ao contrário do Windows, em sistemas *nix as aplicações não trancam ficheiros exclusivos.&lt;/p&gt;

&lt;p&gt;Se estiveres abrires um documento Word no Office e o tentares apagar sem fechar o Office ele acusa um erro. Em *nix isso não acontece. *nix ou Unix-like são sistemas semelhantes ao sistema Unix-like como é o caso da família BSD, Linux e Mac OS X.&lt;/p&gt;

&lt;h3 id=&quot;ficheiros-mais-importantes&quot;&gt;Ficheiros mais importantes&lt;/h3&gt;

&lt;p&gt;Aqui vou manter uma lista de ficheiros e utilários do sistema mais importantes&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/boot/vmlinuz - O ficheiro da kernel do Linux&lt;/li&gt;
  &lt;li&gt;/dev/hda - O ficheiro de dispositivo do primeiro HDD IDE&lt;/li&gt;
  &lt;li&gt;/dev/null - Um dispositivo que não existe! Muitas vezes o retorno considerado lixo é redireccionado para o /dev/null para ser perdido para sempre&lt;/li&gt;
  &lt;li&gt;/etc/bashrc&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 30 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/linux/2014/09/30/linux.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/linux/2014/09/30/linux.html</guid>
			</item>
		
			<item>
				<title>Programação - Introdução</title>
				<description>&lt;p&gt;“Que linguagem de programação me aconselhas?” ou “Isso de programador é que é vida, passar o dia todo sentado” já fazem parte do meu quotidiano.&lt;/p&gt;

&lt;p&gt;Neste artigo quero fazer uma breve introdução a linguagens de programação e ao que esta carreira representa.&lt;/p&gt;

&lt;h3 id=&quot;linguagens&quot;&gt;Linguagens&lt;/h3&gt;

&lt;p&gt;Eu comecei a programar em TCL e depois fiquei uns anos a programar para web com PHP e C#. Há cerca de 1/2 anos comecei a lidar mais com linguagens como Python e shell que me têm ajudado a evoluir bastante enquanto programador.&lt;/p&gt;

&lt;h4 id=&quot;php--hack&quot;&gt;PHP + Hack&lt;/h4&gt;

&lt;p&gt;Hack, yes! Grande prenda da equipa do Facebook, esta linguagem é baseada no PHP mas muito mais direccionada a OOO.&lt;/p&gt;

&lt;p&gt;Para mim as principais vantagens são os tipos anónimos e funções com o retorno definido, por exemplo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * @return User&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Em PHP é assim que consigo ter o IDE a utilizar a auto completação. Tenho de anotar a função com o retorno. Em hack a história é outra&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;bibliotecas-e-frameworks&quot;&gt;Bibliotecas e Frameworks&lt;/h4&gt;

&lt;p&gt;Para mim isto era a única razão pela qual fiquei tanto tempo no .NET, por causa das bibliotecas que temos disponíveis. &lt;/p&gt;

&lt;p&gt;Isto tem bastante peso na escolha de uma linguagem para determinado projecto. Vai ser opensource? Temos disponibilidade do cliente para pagar serviços de desenvolvimento? Está em questão a compatibilidade entre plataformas?&lt;/p&gt;

&lt;p&gt;O ServiceStack é um excelente exemplo de como uma framework pode ser o suficiente para matar um projecto. Até há pouco tempo esta framework era opensource mas sempre com a licença BSD. Uma framework excelente direccionada a webservices e com metadologias e propostas de desenho muito boas mesmo.&lt;/p&gt;

&lt;p&gt;Na actualização da versão 3 para 4 alteraram os planos, passou a ser e apenas a versão 3 se manteve como BSD. O que aconteceu a quem tem projectos suportados nesta framework? São clientes da 4 ou vão ter de fazer um fork da 3 :)&lt;/p&gt;

&lt;p&gt;Já me aconteceu utilizar bibliotecas que já nem eram mantidas, ou que secalhar não são tão boas quanto isso. Podem ter uma API que utilizemos sem problema e satisfaça as necessidades mas o código sofrer de má programação. &lt;/p&gt;

&lt;h3 id=&quot;programador&quot;&gt;Programador&lt;/h3&gt;

&lt;p&gt;Uma grande dificuldade que tenho é o tempo que tenho de dedicar à minha formação enquanto programador. Já trabalhei para empresas que dedicam X horas por semana do teu horário de trabalho para a tua formação, seja com Workshops presenciais ou simplesmente darem-te tempo para estudares!&lt;/p&gt;

</description>
				<pubDate>Wed, 24 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/programacao/2014/09/24/linguagens-programacao.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/programacao/2014/09/24/linguagens-programacao.html</guid>
			</item>
		
			<item>
				<title>Padrão Builder</title>
				<description>&lt;p&gt;Padrão Factory Method&lt;/p&gt;

&lt;p&gt;Este padrão é talvez o mais conhecido de todos os padrões de projecto publicado no “Design Patterns: Elements of Reusable Object-Oriented Software”. Foi quando li este livro que comecei a programar.&lt;/p&gt;

&lt;p&gt;A função dos padrões Factory é encapsular a criação de objectos. &lt;/p&gt;

&lt;p&gt;O Factory Method tem a particularidade de encapsular a criação de objectos e deixar as sub classes decirem quais os objectos criados&lt;/p&gt;

&lt;p&gt;Este é o teste unitário com que vamos testar o código&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public class Bible {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	public function getVerses($bookId, $chapter, $fromVerse, $toVerse = null) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		// etc&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public abstract class BibleCreator {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	public function factoryMethod($version);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public $bible;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Creator&lt;/strong&gt; - Define a estrutura principal a ser herdada por todos os construtores. &lt;/p&gt;

&lt;p&gt;Temos o método abstracto &lt;strong&gt;factoryMethod()&lt;/strong&gt; que é utilizado pelas sub classes para criarem um objecto Bible. Também podemos criar mais métodos a serem implementados, um exemplo seria um &lt;strong&gt;getBible()&lt;/strong&gt; que retornava o objecto Bible&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public class JfrAlmeidaBible : Bible {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	public function factoryMethod(){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$bible = new Bible(); &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		// etc &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		return $bible;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este é o constructor concreto. Herda o Creator (Bible) sendo assim uma sub class que referi em cima, implementa o método &lt;strong&gt;factoryMethod()&lt;/strong&gt; para criar o objecto.&lt;/p&gt;

&lt;p&gt;Person&lt;/p&gt;

&lt;p&gt;ConcretPerson&lt;/p&gt;

&lt;h2 id=&quot;director&quot;&gt;Director&lt;/h2&gt;

&lt;p&gt;Constroi o um objecto utilizando a interface do builder. &lt;/p&gt;

&lt;h2 id=&quot;builder&quot;&gt;Builder&lt;/h2&gt;

</description>
				<pubDate>Wed, 24 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://www.codigo.ovh/design-pattern/2014/09/24/builder-pattern.html</link>
				<guid isPermaLink="true">http://www.codigo.ovh/design-pattern/2014/09/24/builder-pattern.html</guid>
			</item>
		
	</channel>
</rss>