<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Guilherme Cardoso</title>
		<description>My personal website and blog.</description>		
		<link>http://guilhermecardoso.pt</link>
		<atom:link href="http://guilhermecardoso.pt/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Começar a trabalhar como programador</title>
				<description>&lt;p&gt;Neste artigo vou tentar explicar que vários rumos podes tomar na área da programação, mas também direccionado a quem queira estudar web design ou outras áreas como gestão de base de dados. &lt;/p&gt;

&lt;p&gt;Tudo começa no planeamento que vais criar para a tua carreira enquanto programador. Vou dividir em três níveis&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Baixo - Não investes muito tempo para conhecer a linguagem de programação (ou seja, apenas conheces uma também) e trabalhas em projetos rotinários que não te façam ter de sair da tua zona de conforto. Isto implica que não precises de estudar e avançar mais do nível onde te encontras.&lt;/li&gt;
  &lt;li&gt;Normal - Além das 8 horas de trabalho investes tempo para te manteres actualizado e tudo que aprendes não é apenas da necessidade dos projetos. &lt;/li&gt;
  &lt;li&gt;Alto - Estudas e aprendes tecnologias que não usas no teu trabalho, lês teses e projetos com o objetivo de aprendizagem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algo que sempre gostei em programação é que o teu valor enquanto provedor de serviços (não meramente um empregado) pode ser porpocional ao tempo que dedicas a estudar. Para te tornares um melhor programador não precisas de ir para uma boa faculdade ou ter uma cunha, simplesmente tens de estudar. E para isso é preciso gostar mesmo asério do que vais fazer.&lt;/p&gt;

&lt;p&gt;Dependendo da área onde residas, a tua escolha de te tornares um programador de alto nível pode implicar que tenhas de trabalhar noutro local ou então iniciares-te como freelancer. No caso de Portugal hà boas empresas fora das cidades principais Lisboa, Porto, Coimbra e Braga. No entanto é mais em Lisboa e Porto que o mercado de consultoria está localizado e onde tens mais diversidade de escolha.&lt;/p&gt;

&lt;h3 id=&quot;empresas-de-webdesign&quot;&gt;Empresas de Webdesign&lt;/h3&gt;

&lt;p&gt;Não é a desenvolver websites ou a usar CMS que vão aparecer desafios que te evoluam e criem a necessidade de estudo. Há muitas empresas assim, com serviços como: desenvolvimento de websites, criação de lojas online, criação de portais, etc. Basicamente criam sites. Neste tipo de empresas não tens muita margem para evoluir. Alguns exemplos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O código que escreves é irrelevante tanto para o cliente como para o teu empregador, pois não tens nenhum chefe de equipa decerta forma a julgar-te e valorizar-te também. Curtos prazos de desenvolvimento são pedidos porque o projeto foi vendido ao preço de umas sapatilhas, e tens de rentabilizar o tempo.&lt;/li&gt;
  &lt;li&gt;Testes unitários demoram tempo. Na realidade, até podes poupar tempo se souberes desenvolver a escrever testes (TDD) mas isso não interessa para a empresa. Escrever testes = escrever mais código = prazos maiores de desenvolvimento.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uma empresa assim pode ser boa para começares a trabalhar. Outra alternativa é começar no mercado da consultoria mas isso já requer alguma experiência ou boa teoria.&lt;/p&gt;

&lt;h3 id=&quot;consultoria&quot;&gt;Consultoria&lt;/h3&gt;

&lt;p&gt;Em consultoria o cenário é diferente, muito diferente. O teu empregador pode ser uma empresa com equipas pŕoprias de desenvolvimento que esteja a contratar especificamente para aquele projeto ou pode ser uma empresa que apenas sub contrata.&lt;/p&gt;

&lt;p&gt;Podes ser contratado apenas para um projeto ou assinar mesmo um contrato com uma empresa mas simplesmente trabalhares como consultor. Vais participar em projetos externos, conhecer várias pessoas da área pois lidas com muita coisa mesmo! Na mesma sala pode estar uma equipa de desenvolvimento á medida, outra de SAP.&lt;/p&gt;

&lt;p&gt;Os ambientes são mais formais. Eu gosto disto, trabalhei em sítios onde realmente respeitam o local de trabalho e o silêncio é apreciado. Isto é muito importante porque se fores trabalhar para uma empresa pequena onde tenhas uma pessoa que a função dela não requer atenção e foco na tarefa, basta ser engraçadinho e é o suficiente para te afetar durante o trabalho, não te conseguires concentrar.&lt;/p&gt;

&lt;h4 id=&quot;perfil&quot;&gt;Perfil&lt;/h4&gt;

&lt;p&gt;Em consultoria a procura é específica. Enquanto que numa empresa de webdesign tens de saber HTML, CSS, Javascript e uma linguagem como PHP, neste tipo de projetos procuram profissionais específicos para as linguagens e os requisítios são mais elevados.&lt;/p&gt;

&lt;p&gt;Há requisitos na procura que também justificam os salários mais altos. Por exemplo para um programador C# pode ser pedido:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Desenvolver APIs com a .NET Web API&lt;/li&gt;
  &lt;li&gt;Validar os serviços com testes unitários&lt;/li&gt;
  &lt;li&gt;Utilizar GIT ou outro gestor de código&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para um web designer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Código HTML validado com a W3C&lt;/li&gt;
  &lt;li&gt;Utilizar LESS ou SASS para gerar o código CSS&lt;/li&gt;
  &lt;li&gt;Utilizar um padrão em CSS (por exemplo: BEM)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Existem níveis que classificam a tua posição dentro da empresa. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Júnior - programador com menos de 2 anos de experiência&lt;/li&gt;
  &lt;li&gt;Sénior&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Uma dica: se queres trabalhar em consultoria e queres investir em ti então estuda o que mercado mais procura e valoriza! É escusado dizer que quanto mais precisas de aprender, melhor é a recompensa salarial ;)&lt;/p&gt;

&lt;h3 id=&quot;freelancer&quot;&gt;Freelancer&lt;/h3&gt;

&lt;p&gt;Esta área tem esta mais valia em relaçao a muitas outras profissoes. O mercado recorre muito a freelancers e por isso, se investires mesmo em ti consegues trabalhar como freelancer.&lt;/p&gt;

&lt;p&gt;Há aqueles freelancers que só o são por não conseguirem arranjar emprego.&lt;/p&gt;

&lt;p&gt;Aquele programador que não tem experiência séria, num projeto simples sente-se assustado com novas funcionalidades que desconhece possíveis implementações ou que simplesmente demore demasiado tempo a entregar um produto. &lt;/p&gt;

&lt;p&gt;Todos começamos por algum lado, é preciso é continuar.&lt;/p&gt;

&lt;h4 id=&quot;projeto&quot;&gt;Projeto&lt;/h4&gt;

&lt;p&gt;Para aprender a programar web quer uses php, python, c# tens sempre bibliotecas gratuítas que podes usar e desenvolver um projeto. Na fase inicial é uma mais valia ao portfólio e é tido em conta nas entrevistas.&lt;/p&gt;

&lt;p&gt;Seja para um cliente ou para experiência é sempre preciso estruturar e definir toda a preparação do projeto. Há livros a falar da fase de planeamento de um projeto.&lt;/p&gt;

&lt;p&gt;Eu não levo tão asério. Começo em rascunho numa folha de papel, um esquema UML ou a usar um programa de mockups. Primeiro escolho o domínio daquilo que vou desenvolver. O domínio é formado por entidades, por exemplo para um blog as entidades seriam: Article, Comment, User, Review&lt;/p&gt;

&lt;p&gt;Com estas entidades escrevo serviços que vão fazer operações como: ArticleCreate, CommentSend, ReviewEdit, Register, CommentAprove, ArticlePublish, CommentList&lt;/p&gt;

&lt;p&gt;Serviços comuns como NotificationSend, EmailSend que meto à parte. Este esquema depois serve-me como modelo daquilo que vou desenvolver. &lt;/p&gt;

&lt;p&gt;Podes geriar a parte html usando layouts, páginas parciais. Isto é no lado do servidor seja em PHP, C#, python, há frameworks e bibliotecas que auxiliam.&lt;/p&gt;

&lt;p&gt;Outra alternativa é desenvolveres uma SPA - single page application com uma framework como o AngularJS. A parte do cliente (html, css, javascript) fica separada do código do servidor, o backend. No caso de desenvolver uma SPA o ideal é sempre servi-la com uma API. As linguagens modernas têm frameworks boas para implementar APIs.&lt;/p&gt;

&lt;p&gt;Eu recomendo sempre aprenderem angular! Uma aplicação angular pode servir um website ou uma aplicação android a usar phonegap, ionicframework. Podes escrever toda a lógica, serviços num módulo que partilhes no website e aplicação, e depois desenvolves duas aplicações que consumam esse módulo.&lt;/p&gt;

&lt;p&gt;Além que aprendes javascript e html, mesmo que depois venhas a trabalhar no lado do servidor para fazer isto noutros projetos já sabes boas bases e facilmente te adaptas.&lt;/p&gt;

&lt;p&gt;Isto é javascript mas se sabes programar PHP ou C# também sabes javascript. &lt;/p&gt;

&lt;p&gt;Para desenvolver o código temos de seguir uma arquitectura ou pelo menos alguns padrões que asegurem um bom código. &lt;/p&gt;

&lt;p&gt;Eu gosto muito da arquitectura SOA - arquitectura orientada a serviços mas há outras e depende sempre do que fores desenvolver. Um exemplo de uma aplicação dividida em camadas a utilizar a framework Slim em PHP para servir uma API: https://www.guilhermecardoso.pt/software/2014/09/23/arquitectura-padroes.html&lt;/p&gt;

&lt;p&gt;Para implementares funcionalidades como validação de dados, formatação de texto, tratamento de imagens, gestão de ficheiros no sistema podes usar bibliotecas. Cada linguagem tem o seu gestor de dependências como o Nuget em C#, composer em PHP, bower para javascript e css. Ter dependências como bibliotecas geridas por algo assim é melhor, ajuda-te a manter tudo actualizado e torna-se mais fácil a instalação em produção.&lt;/p&gt;

&lt;p&gt;Há serviços que podes contratar como websockets, envio de emails, um sistema de comunicação em grupo. Grande parte das empresas que os prestam vêem de programadores e disponibilizam pacotes gratuítos para projetos startup ou pequenos. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Isto foi escrito pelos Gang Of Four. Não é um livro para um iniciante ler mas se queres aprender a estruturar aplicações e a programar código reutilizável com padrões tens mesmo de ler! - http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented-ebook/dp/B000SEIBB8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apartir daqui vou escrever mais artigos específicos do que falei&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Plano - roadmap a que te comprometas para começares a programar ou evoluires.&lt;/li&gt;
  &lt;li&gt;Curriculum - como te podes apresentar a uma empresa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Começar a programar&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Recursos de aprendizagem&lt;/li&gt;
  &lt;li&gt;Escolher uma linguagem de programação&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Freelancer&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O teu primeiro projeto real&lt;/li&gt;
  &lt;li&gt;Estrutares a base da tua equipa de modo a que outros programadores possam desenvolver e rentabilizar o tempo&lt;/li&gt;
  &lt;li&gt;Propostas de orçamentos&lt;/li&gt;
  &lt;li&gt;Divulgação&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate>
				<link>http://guilhermecardoso.pt/programacao/2014/10/28/profissoes.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/programacao/2014/10/28/profissoes.html</guid>
			</item>
		
			<item>
				<title>Segurança Online - Navegação</title>
				<description>&lt;h3 id=&quot;tor---navegar-em-annimo&quot;&gt;Tor - Navegar em anônimo&lt;/h3&gt;

&lt;p&gt;Como me dizia um amigo, a “cebolinha”! O Tor é uma rede que podemos utilizar para navegar anonimamente na internet. É a rede utilizada por hackers para realizar ataques, para fazer pagamentos online, autenticar em serviços numa rede pública ou simplesmente enganar aquele sistema de votação online.&lt;/p&gt;

&lt;p&gt;O tráfego é transmitido de forma encriptada e passado entre vários computadores e servidores espalhados pelo mundo.&lt;/p&gt;

&lt;p&gt;Como está licenciado como open source já começam a aparecer mais soluções a utilizar esta comunicação e a tornar-se ainda mais popular.&lt;/p&gt;

&lt;h3 id=&quot;tor-navegadorhttpswwwtorprojectorgprojectstorbrowserhtmlen&quot;&gt;&lt;a href=&quot;https://www.torproject.org/projects/torbrowser.html.en&quot;&gt;Tor Navegador&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Este browser é uma versão modificada do Firefox e está disponível para Windows, Linux e Mac. Há extensões para o Firefox para puderes usar a rede Tor com esse browser, mas se preferires podes usar este.&lt;/p&gt;

&lt;p&gt;Não aconselho instalar extensões no navegador como no fazemos no Chrome por exemplo. Essas extensões têm de estar preparadas para utilizar a rede Tor, e nem todas estão o que implica que o tráfego dessa extensão não é anónimo. O mesmo se aplica a outros programas do computador, apenas o navegador utiliza esta rede para comunicar. &lt;/p&gt;

&lt;h3 id=&quot;orbothttpsguardianprojectinfoappsorbot&quot;&gt;&lt;a href=&quot;https://guardianproject.info/apps/orbot/&quot;&gt;Orbot&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-tor1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esta aplicação permite utilizar a rede Tor num telemovel. Muito bom!&lt;/p&gt;

&lt;p&gt;Quando utilizar? Se estiveres a procurar o resultado do Benfica - Sporting, certamente não precisas de “esconder” isso. A rede Tor é mais lenta e também não é bom sobre carregá-la sem necessidade. Se fores ao site da Caixa Geral Deposítos realizar uma transferência já seria uma boa ideia usar, assim como se fores entrar no teu email no café apenas para ver se recebes-te algo.&lt;/p&gt;

&lt;h3 id=&quot;http-vs-https&quot;&gt;HTTP vs HTTPS&lt;/h3&gt;

&lt;p&gt;Alguns sites têm um cadeado na barra de tarefas do browser, normalmente verde mas também pode ser amarelo ou vermelho.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-ssl1.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esse cadeado é apresentado em sites com o protocolo https que utiliza SSL para encriptar as comunicações com chaves. Outro exemplo é o facebook, google, spotify, youtube.&lt;/p&gt;

&lt;p&gt;Recentemente foi publicada uma falha neste protocólo que põs em causa a segurança de vários sistemas e muitos se questionaram sobre estes certificados serem ou não uma prova de segurança. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tem preferência por sites com comunicações seguras&lt;/strong&gt;. Certificados SSL não são nenhum investimento gigante para sites, sejam de serviços ou comunidades até. Eu utilizo no meu e não lido com informação importante, considera estranho o facto de um site conhecido não usar nenhum certificado.&lt;/p&gt;

</description>
				<pubDate>Thu, 16 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/bower/2014/10/16/seguran-online-navegacao.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/bower/2014/10/16/seguran-online-navegacao.html</guid>
			</item>
		
			<item>
				<title>Segurança Online - Password</title>
				<description>&lt;p&gt;O problema de passwords fracas é que são facilmente identificadas por ataques brute-force. Uma password que seja construída por sequências ou palavras óbvias torna-se vulnerável a este tipo de ataques. Alguns exemplos para o João Marques nascido a 31/10/1960.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;123_joao_321&lt;/li&gt;
  &lt;li&gt;asdasd&lt;em&gt;joao&lt;/em&gt;asdasd&lt;/li&gt;
  &lt;li&gt;qwer123_31_qwe123&lt;/li&gt;
  &lt;li&gt;1960&lt;em&gt;10&lt;/em&gt;31&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Estas passwords são vulneráveis a brute-force. Se for uma vítima específica, o hacker vai usar as tais palavras óbvias como o nome dos pais, filhos, morada, localidade.&lt;/p&gt;

&lt;p&gt;Também é comum utilizar a mesma password para serviços diferentes e apenas diferir numa palavra que identifique esse serviço. No exemplo de cima, para o Facebook e Google seria:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;123_joao_321-facebook&lt;/li&gt;
  &lt;li&gt;123_joao_321-google&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podemos concluír que para descubrir a password um hacker pode tentar várias tentativas até usando palavras chaves que de certa forma se identifiquem a nós.&lt;/p&gt;

&lt;p&gt;Assim a solução para uma password é não utilizar-mos nenhuma sequência ou melhor ainda: uma password que nem nós saibamos! Uma palavra construída por um programa que pode ser instalado no computador ou telemovel, e seja gerada apartir de uma lógica.&lt;/p&gt;

&lt;h2 id=&quot;usuabilidade&quot;&gt;Usuabilidade&lt;/h2&gt;

&lt;p&gt;Quando tens dezenas de contas registadas em serviços como email, redes sociais, portais, o mais comum é a password ser sempre a mesma. Até podes usar diferentes mas cada uma atribúida a níveis diferentes de segurança (mais complexas para serviços mais sensíveis).&lt;/p&gt;

&lt;p&gt;Não é prático termos dezenas de passwords diferentes que tenhamos de decorar sempre. &lt;/p&gt;

&lt;h2 id=&quot;como-utilizar-a-password&quot;&gt;Como utilizar a password&lt;/h2&gt;

&lt;p&gt;O primeiro passo que fazes é sempre autenticares-te. Se for num site como o Facebook, a opção para manter a sessão iniciada após a autenticação pode ser uma vulnerabilidade em redes que não sejam confiáveis. Isto porque esta opção guarda uma espécie de palavra super secreta que pode ser usada durante X dias para entrar no Facebook sem teres de te ligar sempre. Esta palavra expira depois desses dias, são os tokens (no caso do Facebook providos por OAuth 2).&lt;/p&gt;

&lt;p&gt;Se estiveres ligado á internet de tua casa, podes partir do princípio que podes guardar a sessão iniciada. Estás numa rede conhecida e se alguém a invadir a tua conta do Facebook deve ser a menor das preocupações.&lt;/p&gt;

&lt;p&gt;Numa rede pública como um café inverte-se claro. Nessa rede pode aceder qualquer um que tenha o acesso, acesso esse que não é controlado por ti. Podes ser vítima de um roubo da palavra super secreta que falei. Essa palavra está guardada no teu computador (para ser usada para entrar no Facebook sem te autenticares sempre), possivelmente numa cookie facilmente acedida. Quem roubar essa palavra, consegue entrar na tua conta sem precisar de se autenticar.&lt;/p&gt;

&lt;p&gt;**Nunca guardes a sessão iniciada automaticamente numa rede pública. Se procurares mesmo segurança, então nunca a guardes em nenhuma rede.&lt;/p&gt;

&lt;h2 id=&quot;master-password-app&quot;&gt;Master Password App&lt;/h2&gt;

&lt;p&gt;Este é o programa que recomendo para gerires a tua password. Este programa gera uma palavra através de um algoritmo, isto significa que ela não é guardada em nenhum lado.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-pw-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O Master Password pode ser instalado como uma aplicação mobile, um programa no computador ou até mesmo usado em código.&lt;/p&gt;

&lt;p&gt;No caso de uma password importante que apenas uses algumas vezes por dia (o acto da autenticação e não o serviço em si), tendo esta aplicação instalada é uma mais valia e evita que guardes passwords.&lt;/p&gt;

&lt;p&gt;Nesse exemplo a palavra t33t que facilmente seria descoberta por um hacker, sendo encriptada com o algoritmo transformou-se em w1=rD9YhWahxArZydD8b.&lt;/p&gt;

&lt;h2 id=&quot;google-security-key&quot;&gt;Google Security Key&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/seguranca-pw-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A Google tomou um passo importante ao promover a autenticação de dois passos. Primeiro autenticas-te com a password e depois receber um código de confirmação através de uma sms, chamada de voz ou uma aplicação própria para isso. Esse código de confirmação é o segundo passo na autenticação.&lt;/p&gt;

&lt;p&gt;Além de usar um código de confirmação no segundo passo, agora é possível usar uma pen drive, a chamada &lt;strong&gt;Security Key for 2-Step verification&lt;/strong&gt;. Por enquanto esta autenticação apenas é possível através do Chrome na versão 38 (muito recente ainda).&lt;/p&gt;
</description>
				<pubDate>Wed, 15 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/bower/2014/10/15/seguranca-online-password.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/bower/2014/10/15/seguranca-online-password.html</guid>
			</item>
		
			<item>
				<title>Variáveis de ambiente e locais no Unix</title>
				<description>&lt;p&gt;No UNIX os softwares são mais flexíveis que Windows, o comportamente de um programa pode ser alterado apenas por alterar uma variável. Além de caminhos para pastas, as variáveis de ambiente podem ter opções de linha de comandos, ou flags (EMAILS_ENABLED, COMMENTS_ALLOWED).&lt;/p&gt;

&lt;p&gt;As variáveis de ambiente ou globais guardam informação partilhada por programas como caminhos para determinadas pastas (variável HOME com C:\Users\Gui). São sempre escritas em maiúsculas, semelhantemente em linguagens de programação as constantes são escritas em maísculas e podem desempenhar uma função semelhante, apesar de isto ser uma convenção e não uma regra.&lt;/p&gt;

&lt;p&gt;No terminal é indiferente se as variáveis seguem esta com convenção ou não, as de ambiente da shell actual são herdadas por todos os shells filhos. &lt;/p&gt;

&lt;p&gt;Também existem as variáveis são as variáveis do shell, as locais. Estas são escritas em minúsculas e não são herdadas pelos filhos.	&lt;/p&gt;

&lt;h3 id=&quot;principais&quot;&gt;Principais&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;PATH&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Contém o caminho para pastas com ficheiros de sistema (equivalente no Windows ao programa.exe). Os programas que executas na consola, ls, node, grunt, mkdir, tanto podem ter o executável na /usr/local/bin que já está na variável PATH normalmente, ou numa pasta /opt/spotify-client que seria adicionado á PATH.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOME&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O caminho absoluto para o teu directorio home, por exemplo /home/maria Programas usam-na para guardarem ficheiros de configuração de cada utilizador do sistema na sua pasta home ou o comando &lt;strong&gt;cd ~&lt;/strong&gt; que usa a variável para ir para a HOME.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USERNAME&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nome do utilizador autenticado na shell.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TERM&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tipo de terminal usado para aceder ao sistema&lt;/p&gt;

&lt;h3 id=&quot;como-usar&quot;&gt;Como usar&lt;/h3&gt;

&lt;p&gt;Uma variável é atribuida por VARIAVEL=VALOR&lt;/p&gt;

&lt;p&gt;Por vezes podemos usar o valor da variável para atribuir a um novo valor, exemplo seria adicionar a pasta /opt/bible-king-james á variável PATH.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dk@localhost:/&lt;span class=&quot;nv&quot;&gt;$ PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/opt/bible-king-james
dk@localhost:/&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/opt/GitEye/:/opt/bible-king-james/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Na PATH adicionei o caminho aseguir a $PATH, a variável que com o valor actual dos os restantes caminhos.&lt;/p&gt;

&lt;p&gt;Quando executarmos um programa ele procura primeiro na pasta /usr/local/bin, senão existir na /usr/bin, e consecutivamente. Se adicionasse no início, esse caminho seria o primeiro a ser usado&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dk@localhost:/opt/sublime&lt;span class=&quot;nv&quot;&gt;$ PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/bible-king-james:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
dk@localhost:/opt/sublime&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
/opt/bible-king-james:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/opt/GitEye/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Se usassemos apenas atribuição com PATH não seria bom, por exemplo: PATH=/opt/bibke-king-james. Ness momento quando executasses um programa no shell ele apenas seria procurado nesse novo caminho. Comandos como cd, ls, não estaríam disponíveis.&lt;/p&gt;

&lt;h3 id=&quot;onde-usar&quot;&gt;Onde usar&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;~/.bashrc apenas são acessível pelo bash em sim como configurações do shell, consola. Aqui não guardamos variáveis utilizadas por programas porque não lêem este ficheiro, apenas o shell do bash.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;~/.profile aplicado á sessão inteira, como programas que são executados no arranque da sessão&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;~/.bash_profile&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Fri, 10 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/linux/2014/10/10/linux-variaveis-de-ambiente.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/linux/2014/10/10/linux-variaveis-de-ambiente.html</guid>
			</item>
		
			<item>
				<title>PHP - Biblioteca</title>
				<description>&lt;p&gt;Neste artigo vou explicar como podes reutilizar código criando uma biblioteca que seja partilhada. Esta biblioteca vai ter como dependência a biblioteca Respect, que é utilizada para validação.&lt;/p&gt;

&lt;h3 id=&quot;composer&quot;&gt;Composer&lt;/h3&gt;

&lt;p&gt;Para gerir dependências em PHP o composer é o gestor de eleição. Não é nenhum programa que tenhas de distribuir com a biblioteca mas sim um gestor de dependências.&lt;/p&gt;

&lt;p&gt;Na raíz da aplicação (no directorio bible) criamos o ficheiro composer.json. Este ficheiro contém a informação necessária ao composer para reconhecer a biblioteca, as suas dependências e outras informações importantes como a utilização de PSR.&lt;/p&gt;

&lt;p&gt;Exemplo de um ficheiro composer.json&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
	&quot;name&quot;: &quot;o-teu-nome/biblioteca&quot;,
    &quot;config&quot;: {
        &quot;vendor-dir&quot;: &quot;src/vendor&quot;
    },
    &quot;require&quot;: {
        &quot;respect/validation&quot;: &quot;dev-master&quot;
    },
    &quot;autoload&quot;: {
        &quot;psr-0&quot;: {
            &quot;Bible&quot;: &quot;./src&quot;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No vendor-dir indicamos o directorio onde as dependências vão ser instaladas. Como a biblioteca vai ficar em /bible/src/Bible deixamos as dependências em /bible/src/vendor&lt;/p&gt;

&lt;p&gt;O autoload permite-nos indicar onde está a biblioteca, isto é necessário para que as aplicações a consumam. O composer precisa de saber onde está situada a biblioteca porque em nenhuma parte do código vamos referenciar directamente este caminho. As dependências são da responsabilidade do composer, nós apenas precisamos de ter tudo bem registado e incluindo o ficheiro autoload.php que se encontra dentro da pasta bible/src/vendor.&lt;/p&gt;

&lt;h3 id=&quot;a-biblioteca&quot;&gt;A biblioteca&lt;/h3&gt;

&lt;p&gt;Esta biblioteca vai ser simples. Vamos chamar-lhe &lt;em&gt;Bible&lt;/em&gt; e tem como função prover serviços que procurem versículos na biblia. Vão ser dois ficheiros: o serviço VerseService e uma classe utilitária VerseFormat para formatar-mos os versos.&lt;/p&gt;

&lt;p&gt;O ficheiro bootstrap.php é responsável por carregar todas as dependências da biblioteca e configurações primárias.&lt;/p&gt;

&lt;p&gt;bible
bible/src
bible/src/bootstrap.php
bible/src/Bible
bible/src/Bible/Services
bible/src/Bible/Services/VerseService.php
bible/src/Bible/Helpers
bible/src/Bible/Helpers/VerseFormat.php&lt;/p&gt;

&lt;p&gt;A pasta src indica source - o directório onde está todo o código da Biblioteca. Outras pasta de primeiro nível além da src poderiam ser:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docs -  para documentação&lt;/li&gt;
  &lt;li&gt;examples - para exemplos de como utilizar a biblioteca.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;aplicao-cliente&quot;&gt;Aplicação Cliente&lt;/h3&gt;

&lt;p&gt;Esta é a aplicação que vai consumir a biblioteca. Enquanto que a biblioteca indica o autoload e as dependências, o cliente tem de indicar como dependência a biblioteca e as dependências da biblioteca (neste exemplo o respect/validation) também são automáticamente instaladas.&lt;/p&gt;

&lt;p&gt;O cliente tem de ter um ficheiro composer.json também&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &quot;config&quot;: {
        &quot;vendor-dir&quot;: &quot;src/vendor&quot;
    },
    &quot;require&quot;: {
        &quot;respect/validation&quot;: &quot;dev-master&quot;,
        &quot;o-teu-nome/biblioteca&quot;: &quot;dev-master&quot;
    },
    &quot;autoload&quot;: {
        &quot;psr-0&quot;: {
            &quot;Bible&quot;: &quot;./src&quot;
        }
    },
    &quot;repositories&quot;: [{
        &quot;type&quot;: &quot;vcs&quot;,
        &quot;url&quot;: &quot;git@bitbucket.org:o-teu-nome/biblioteca.git&quot;
    }]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O composer tem um registo publico da mesma forma que o bower mas neste exemplo a biblioteca é privada, por isso indicamos no &lt;strong&gt;repositories&lt;/strong&gt; a localização. &lt;/p&gt;

&lt;p&gt;O dev-master é o ramo GIT que queremos utilizar. Poderia ser&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;master&lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;(para o mais recente apenas)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vai depender da forma como gerires o GIT. Eu gosto de manter a mesma versão da biblioteca com a tag do Git para criar versões 0.1, 0.1.1&lt;/p&gt;

&lt;h3 id=&quot;actualizao&quot;&gt;Actualização&lt;/h3&gt;

&lt;p&gt;Neste exemplo temos um cliente a utilizar a biblioteca mas podem ser N. A utilização do composer é também para gerir as actualizações de uma forma muito simples: alteramos a biblioteca e enviamos todas as alterações para o versionador de código (GIT). Os clientes depois actualizam as dependências com &lt;strong&gt;composer update&lt;/strong&gt;&lt;/p&gt;

</description>
				<pubDate>Fri, 10 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/bower/2014/10/10/criar-uma-biblioteca-em-php.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/bower/2014/10/10/criar-uma-biblioteca-em-php.html</guid>
			</item>
		
			<item>
				<title>Manifesto de 1986 - The Conscience of a Hacker</title>
				<description>&lt;p&gt;Um manifesto escrito em 1986 por um hacker. Considero-o uma introdução obrigatória para quem quer perceber o que é um hacker afinal de contas. É necessária a educação ética nesta área para quem a quer estudar, e assim não deixar o ego crescer demasiado e tornar-se num pseudo black hat.&lt;/p&gt;

&lt;p&gt;No filme The Social Network, no quarto do Mark Zuckerberg está um poster a branco e verde, é o mesmo manifesto&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/hacker-manifest2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A ideia criada pela media dá-nos a entender que um hacker é criminoso pois rouba informação. E tudo começa aqui, o erro da presunção que um hacker é de facto alguém mau.&lt;/p&gt;

&lt;p&gt;Este manifesto foi escrito pelo The Mentor, de nome Loyd Blankenship após a sua detenção. É importante notar na crítica ao sistema de educação, que tantos anos depois se mantém.&lt;/p&gt;

&lt;p&gt;Eu tenho o 9º ano de escolaridade e não terminei o secundário nem frequentei nenhum curso superior para aprender a programar. No entanto sou desfavorecido salarialmente e discriminado em várias situações que ter o 9º ano corresponde a ser um insucesso escolar.&lt;/p&gt;

&lt;p&gt;A mim foi necessário estudar sozinho para chegar aqui, não limites as tuas escolhas pelo que o sistema te oferece. Prefiro ser um insucesso escolar do que ser mais uma pomba no marquês de pombal.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/hacker-manifesto1.jpg&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
The following was written shortly after my arrest...

                       \/\The Conscience of a Hacker/\/

                                      by

                               +++The Mentor+++

                          Written on January 8, 1986
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

        Another one got caught today, it&#39;s all over the papers.  &quot;Teenager
Arrested in Computer Crime Scandal&quot;, &quot;Hacker Arrested after Bank Tampering&quot;...
        Damn kids.  They&#39;re all alike.

        But did you, in your three-piece psychology and 1950&#39;s technobrain,
ever take a look behind the eyes of the hacker?  Did you ever wonder what
made him tick, what forces shaped him, what may have molded him?
        I am a hacker, enter my world...
        Mine is a world that begins with school... I&#39;m smarter than most of
the other kids, this crap they teach us bores me...
        Damn underachiever.  They&#39;re all alike.

        I&#39;m in junior high or high school.  I&#39;ve listened to teachers explain
for the fifteenth time how to reduce a fraction.  I understand it.  &quot;No, Ms.
Smith, I didn&#39;t show my work.  I did it in my head...&quot;
        Damn kid.  Probably copied it.  They&#39;re all alike.

        I made a discovery today.  I found a computer.  Wait a second, this is
cool.  It does what I want it to.  If it makes a mistake, it&#39;s because I
screwed it up.  Not because it doesn&#39;t like me...
                Or feels threatened by me...
                Or thinks I&#39;m a smart ass...
                Or doesn&#39;t like teaching and shouldn&#39;t be here...
        Damn kid.  All he does is play games.  They&#39;re all alike.

        And then it happened... a door opened to a world... rushing through
the phone line like heroin through an addict&#39;s veins, an electronic pulse is
sent out, a refuge from the day-to-day incompetencies is sought... a board is
found.
        &quot;This is it... this is where I belong...&quot;
        I know everyone here... even if I&#39;ve never met them, never talked to
them, may never hear from them again... I know you all...
        Damn kid.  Tying up the phone line again.  They&#39;re all alike...

        You bet your ass we&#39;re all alike... we&#39;ve been spoon-fed baby food at
school when we hungered for steak... the bits of meat that you did let slip
through were pre-chewed and tasteless.  We&#39;ve been dominated by sadists, or
ignored by the apathetic.  The few that had something to teach found us will-
ing pupils, but those few are like drops of water in the desert.

        This is our world now... the world of the electron and the switch, the
beauty of the baud.  We make use of a service already existing without paying
for what could be dirt-cheap if it wasn&#39;t run by profiteering gluttons, and
you call us criminals.  We explore... and you call us criminals.  We seek
after knowledge... and you call us criminals.  We exist without skin color,
without nationality, without religious bias... and you call us criminals.
You build atomic bombs, you wage wars, you murder, cheat, and lie to us
and try to make us believe it&#39;s for our own good, yet we&#39;re the criminals.

        Yes, I am a criminal.  My crime is that of curiosity.  My crime is
that of judging people by what they say and think, not what they look like.
My crime is that of outsmarting you, something that you will never forgive me
for.

        I am a hacker, and this is my manifesto.  You may stop this individual,
but you can&#39;t stop us all... after all, we&#39;re all alike.

                               +++The Mentor+++
_________________________________________________________&lt;/pre&gt;
</description>
				<pubDate>Thu, 02 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/hack/2014/10/02/hacker-manifesto.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/hack/2014/10/02/hacker-manifesto.html</guid>
			</item>
		
			<item>
				<title>Scripts shell</title>
				<description>&lt;p&gt;O bash é não é uma linguagem de programação mas sim um interpretador de comandos. Quando na consola escrevemos um comando o bash interpreta-o executando-o.&lt;/p&gt;

&lt;p&gt;Shell scripts é uma linguagem de script usada em vários sitemas operativos em bash. Um exemplo pode ser o ficheiro &lt;strong&gt;configure&lt;/strong&gt; gerado nas instalações de software ou um qualquer outro ficheiro .sh. É script pois é um programa escrito em linguagem interpretada como em Python ou Javascript, não é compilada como em C#.&lt;/p&gt;

&lt;p&gt;No caso de um programador, temos tarefas comuns como apagar um directori e clonar outro, um script que abra o chrome, um cliente de emails, verifique se há notificações de emails ou redes sociais, etc.&lt;/p&gt;

&lt;p&gt;No fundo um script shell vai executar o que pretender-mos. Como exemplo temos o copiar-tese.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
###
# Copiar Tese para pendrive
#
# @description Este script copia todos os documentos da tese para uma pendrive
# @author Guilherme Cardoso &amp;lt;email@guilhermecardoso.pt&amp;gt;
###
cp ~/trabalhos/tese /dev/sda2/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Os comentários não são obrigatórios, apenas na primeira linha para indicar que é um script bash. Os outros sigo a norma mais comum: titulo, descrição, autor. Mesmo em scripts que sei que mais ninguém vai usar documento-os, até porque sou mesmo esquecido.&lt;/p&gt;

&lt;p&gt;** Dica ** Na linha de comandos também podemos executar vários comandos intercalados. Para isso separamos cada comando com &amp;amp;&amp;amp;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir bible &amp;amp;&amp;amp; cd bible &amp;amp;&amp;amp; cp /tmp/bible.db bible.db
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;permisso&quot;&gt;Permissão&lt;/h2&gt;

&lt;p&gt;Os scripts bash têm de ter permissão para serem executados. É atribuida com o chmod&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x copiar-tese.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;correr-scripts&quot;&gt;Correr scripts&lt;/h2&gt;

&lt;p&gt;Podem ser executados com o comando sh ou usando ./&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./copiar-tese.sh
sh copiar-tese.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Além de serem executados também podemos usar o comando &lt;strong&gt;source&lt;/strong&gt;. A diferença é que o source vai correr os comandos na shell actual e executar corre os comandos numa nova shell. Por exemplo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
PATH = $PATH:/opt/bible/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este comando vai copiar para a variável de ambiente PATH o caminho /opt/bible/bin, e os executáveis dentro da pasta bin ficam acessíveis pelo terminar por estarem na PATH. &lt;/p&gt;

&lt;p&gt;Se executarmos o script (./set-path.sh ou sh set-path.sh) a variável PATH não foi alterada na shell em que nos encontramos, se digitares no terminal echo $PATH ele não retorna com /opt/bible/bin&lt;/p&gt;

&lt;p&gt;Se abrires uma nova shell a variável já está actualizada. Se em vez de executares usares &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source set-path.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O script é executado e as alterações são realizadas na shell actual. Isto é porque o source serve para actualizar ficheiros de configuração, e uma das actualizações são as variáveis de ambiente.&lt;/p&gt;

&lt;p&gt;O comando da linha 10 apenas é executado se na linha 9 não houve nenhuma excepção. Isto permite executar comandos em cadeia e é alias algo que fazemos naturalmente quando removemos uma pasta, criamos uma nova e copiar conteudo de outro. &lt;/p&gt;

&lt;p&gt;Em técnicas de invasão um script shell pode fazer uma ligação ssh, comprimir arquivos, copiar tokens do Facebook, copiar os registos do keylogger.&lt;/p&gt;

&lt;h3 id=&quot;algumas-dicas&quot;&gt;Algumas dicas&lt;/h3&gt;

&lt;p&gt;Em bash o “*” tem um significado próprio. Se executares um script que aceite * é preciso escapar com \ Por exemplo o redis-cli que é um cliente para a base de dados redis, executamos a aplicação redis-cli e entramos numa shell de acesso ao Redis. Para escrever um script que execute um comando nessa shell teria de ser&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis-cli keys \*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Isto seria igual a entrar no redis-cli e depois escrever na shell keys *&lt;/p&gt;
</description>
				<pubDate>Wed, 01 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/linux/2014/10/01/shell-scripts.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/linux/2014/10/01/shell-scripts.html</guid>
			</item>
		
			<item>
				<title>Shell</title>
				<description>&lt;p&gt;A shell é um interpretador de linha de comandos que disponibilia uma interface de usuário para sistemas *nix. Tu escolhes a operação a ser realizada através do comando que escreves e o interpretador executa, ou através de scripts shell. http://guilhermecardoso.pt/linux/2014/10/01/shell-scripts.html&lt;/p&gt;

&lt;p&gt;A consola que o Linux traz instalada é um emulador de terminal e permite-nos abrir uma nova shell. As shells também podem ser utilizadas por ligações de hardware ou sessões de rede.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/shell-emulator-1.jpg&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 01 Oct 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/linux/2014/10/01/shell.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/linux/2014/10/01/shell.html</guid>
			</item>
		
			<item>
				<title>Instalar softwares em Linux</title>
				<description>&lt;p&gt;Como se instala um software? Extrais o código e corres numa linha de comandos: ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo install&lt;/p&gt;

&lt;p&gt;Simples. Agora a explicação.&lt;/p&gt;

&lt;p&gt;No Windows fazes download de software já compilado e pronto a ser executado para a arquitectura certa. Alguns instaladores lidam com essa tarefa e o mesmo instalador instala versões diferentes, outros softwares são distribuídos para arquitecturas diferentes, por exemplo quando na página de download tens disponíveis as versões x86 para 32 bits e x64 para 64 bits para download.&lt;/p&gt;

&lt;p&gt;No Linux há softwares distribuídos assim - os pacotes .deb em debian e .rpm em Fedora. Mas isto é uma pequena parte comparado com o software disponível que é opensource e muito dele mantido apenas por amor do programador aos utilizadores. Nesses casos não há tempo para disponibilizar estes pacotes.&lt;/p&gt;

&lt;p&gt;Também hà software disponibilizado por repositórios que podem ser instalados com o apt ou yum. Podes ver mais aqui: (https://guilhermecardoso.pt/ide/software/2014/09/18/linux-software-versoes-chaves.html)[https://guilhermecardoso.pt/ide/software/2014/09/18/linux-software-versoes-chaves.html]&lt;/p&gt;

&lt;p&gt;Mais tarde ou mais cedo chega a altura em que é bom perceber como se compila os softwares em Linux, eu ainda configurei muitos servidores sem o entender bem.&lt;/p&gt;

&lt;p&gt;Código - O código do software é distribuído em ficheiros comprimidos, sistemas GIT, ftp, entre outros. Normalmente fazes download do ficheiro comprimido, por exemplo “spotify-client-test-0.1.tar.gz”&lt;/p&gt;

&lt;p&gt;Se for em linhas de comandos, os arquivos .tar.gz descomprimem-se com:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -xvfz spotify-client-test-0.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Isto cria uma nova directoria, neste caso &lt;strong&gt;spotify-client-test-0.1&lt;/strong&gt;. Ela deve ter um ficheiro README e outro INSTALL. Nestes documentos de texto os desenvolvedores explicam como instalar, que dependências existem, problemas comuns. &lt;/p&gt;

&lt;h3 id=&quot;configure&quot;&gt;./configure&lt;/h3&gt;

&lt;p&gt;Este comando executa o script &lt;strong&gt;configure&lt;/strong&gt; que vai certificar que o sistema operativo tem todas as dependências necessárias para que o software seja instalado. Dependendo do software o retorno do comando pode ser mais ou menos informativo.&lt;/p&gt;

&lt;p&gt;Normalmente explica a biblioteca em falta e sugere pacotes a serem instalados. Em casos de erros conseguimos ver sempre o ficheiro e ir lá inspecionar por nós.&lt;/p&gt;

&lt;p&gt;No final o script cria um ficheiro &lt;strong&gt;MAKEFILE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ele pode gerar o script e mesmo assim ter enviado erros, é preciso ter atenção a isso. &lt;/p&gt;

&lt;p&gt;O parametro prefix indica o destino da instalação quando instalarmos. Esse destino é pré defenido pelo sistema mas pode ser alterado&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./configure --prefix=/usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;make&quot;&gt;make&lt;/h3&gt;

&lt;p&gt;O make é um software utilitário que existe em quase todos os sistemas Unix.&lt;/p&gt;

&lt;p&gt;Este utilitário procura um script &lt;strong&gt;MAKEFILE&lt;/strong&gt; para compilar todo o código do programa e criar os executáveis. É possível que certas partes do código requiram que outras partes do código já estejam prontas, é esta a função da Makefile. Define a sequência para os eventos para que o programa não acuse dependências em falta.&lt;/p&gt;

&lt;p&gt;O makefile tem vários nomes para secções diferentes. É possível que o controlo seja pasasdo para diversas secções dentro do Makefile ou é possível que no fim de uma secção haja um comando para ir para outra.&lt;/p&gt;

&lt;p&gt;O melhor exemplo que temos é o &lt;strong&gt;install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se o comando &lt;strong&gt;make&lt;/strong&gt; correr com sucesso então a instalação está quase completa.&lt;/p&gt;

&lt;h3 id=&quot;make-install&quot;&gt;make install&lt;/h3&gt;

&lt;p&gt;Quando corres o make sem nenhum parametro, a instrução no Makefile começa a executar do início e consoante as regras defenidas dentro do Makefile. Quando corres make com install como parâmetro, o utilitário make procura por uma secção chamada install dentro do Makefile, e executa apenas essa secção.&lt;/p&gt;

&lt;p&gt;Com o &lt;strong&gt;make&lt;/strong&gt; os executáveis e outros ficheiros são compilados, a secção install copia esses executáveis e outros ficheiros para os directórios finais do sistema.&lt;/p&gt;

&lt;p&gt;Os executáveis podem ser copiados para o /usr/local/bin para ser acedido por todos os utilizadores. O make apenas os gera, a secção install é que os copia.&lt;/p&gt;

&lt;h3 id=&quot;autogen&quot;&gt;autogen&lt;/h3&gt;

&lt;p&gt;http://www.codecoffee.com/tipsforlinux/articles/27.html&lt;/p&gt;

</description>
				<pubDate>Tue, 30 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/linux/2014/09/30/linux-instalar-softwares.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/linux/2014/09/30/linux-instalar-softwares.html</guid>
			</item>
		
			<item>
				<title>Linux</title>
				<description>&lt;p&gt;Daqui vou dividir em vários artigos com o tempo.&lt;/p&gt;

&lt;h2 id=&quot;distribuies&quot;&gt;Distribuições&lt;/h2&gt;

&lt;p&gt;O mais óbvio é começar pela escolha de uma distribuição. Existem vários distribuições com objectivos diferentes, a escolha depende sempre daquilo que o sistema operativo precisar de fazer. &lt;/p&gt;

&lt;p&gt;Senão souberes qual distribuição escolher começa pelo Ubuntu. Á medida que fores conhecendo melhor o Linux vais-te identificando com outras distribuições.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;img-responsive&quot; src=&quot;/media/posts/linux-ubuntu1.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;windows-e-linux&quot;&gt;Windows e Linux&lt;/h2&gt;

&lt;p&gt;A estrutura do sistema é importante porque te dá uma ideia de como as coisas funcionam em Linux&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/bin/ - Binários essenciais &lt;/li&gt;
  &lt;li&gt;/boot/ - Ficheiros estáticos do boot loader. Estes ficheiros são utilizados durante o processo de boot-up, incluindo a Kernel kernel do Linux&lt;/li&gt;
  &lt;li&gt;/dev/ - Ficheiros de dispositivos. Contém ficheiros de dispositivos para todo o hardware de dispositivos existentes como um leitor de CD, CPU&lt;/li&gt;
  &lt;li&gt;/etc/ - Configurações específicas do sistema&lt;/li&gt;
  &lt;li&gt;/home/ - As directorias home dos utilizadores &lt;/li&gt;
  &lt;li&gt;/lib/ - Bibliotecas e módulos da kernel essenciais que são partilhados&lt;/li&gt;
  &lt;li&gt;/media/ - Os media removíveis (pen drive) são montados aqui&lt;/li&gt;
  &lt;li&gt;/mnt/ - Ponto de montagem para sistemas temporariamente montados&lt;/li&gt;
  &lt;li&gt;/opt/ - Sítio alternativo onde os softwares instalados por pacotes alternativos são instalados&lt;/li&gt;
  &lt;li&gt;/sbin/ - Binários do sistema&lt;/li&gt;
  &lt;li&gt;/srv/ - Dados para serviços que o sistema disponibiliza&lt;/li&gt;
  &lt;li&gt;/tmp/ - Ficheiros temporários&lt;/li&gt;
  &lt;li&gt;/usr/ - Utilitários e aplicações dos utilizadores&lt;/li&gt;
  &lt;li&gt;/var/ - Ficheiros variáveis&lt;/li&gt;
  &lt;li&gt;/root/ - O directório home do root&lt;/li&gt;
  &lt;li&gt;/proc/ - Documentação vertical do sistema e estado de processos como ficheiros de texto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A comparação com o Windows&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows - Contém todos os ficheiros necessários do sistema operativo. Tudo que percenta ao sistema operativo apenas fica aqui&lt;/li&gt;
  &lt;li&gt;Users - Os perfis de utilizador&lt;/li&gt;
  &lt;li&gt;Boot - Ficheiros do boot loader&lt;/li&gt;
  &lt;li&gt;ProgramData - Ficheiros das instalações, dados guardados por aplicações&lt;/li&gt;
  &lt;li&gt;Recovery - Contém a imagem necessária para entrar na consola de recuperação&lt;/li&gt;
  &lt;li&gt;$recycle.bin - Esta pasta é a reciclagem do Windows, é para aqui que todos os ficheiros removidos vão. Apagar a pasta é igual a esvaziar a reciclagem ou parte dela (cada partição tem a sua própria $recycle.bin, a reciclagem no Windows pode conter ficheiros de diferentes partições)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows utiliza barra para trás, o Linux é para a frente&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Windows\system32

/usr/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O que reparamos logo é que no Windows existem letras para os dispositivos e partições, no Linux está tudo dentro do /. No Windows isto também é possível mas não é assim que ele está preparado.&lt;/p&gt;

&lt;h3 id=&quot;apagar-ou-modificar-ficheiros-abertos&quot;&gt;Apagar ou modificar ficheiros abertos&lt;/h3&gt;

&lt;p&gt;Ao contrário do Windows, em sistemas *nix as aplicações não trancam ficheiros exclusivos.&lt;/p&gt;

&lt;p&gt;Se estiveres abrires um documento Word no Office e o tentares apagar sem fechar o Office ele acusa um erro. Em *nix isso não acontece. *nix ou Unix-like são sistemas semelhantes ao sistema Unix-like como é o caso da família BSD, Linux e Mac OS X.&lt;/p&gt;

&lt;h3 id=&quot;ficheiros-mais-importantes&quot;&gt;Ficheiros mais importantes&lt;/h3&gt;

&lt;p&gt;Aqui vou manter uma lista de ficheiros e utilários do sistema mais importantes&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/boot/vmlinuz - O ficheiro da kernel do Linux&lt;/li&gt;
  &lt;li&gt;/dev/hda - O ficheiro de dispositivo do primeiro HDD IDE&lt;/li&gt;
  &lt;li&gt;/dev/null - Um dispositivo que não existe! Muitas vezes o retorno considerado lixo é redireccionado para o /dev/null para ser perdido para sempre&lt;/li&gt;
  &lt;li&gt;/etc/bashrc&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 30 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/linux/2014/09/30/linux.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/linux/2014/09/30/linux.html</guid>
			</item>
		
			<item>
				<title>Programação - Introdução</title>
				<description>&lt;p&gt;“Que linguagem de programação me aconselhas?” ou “Isso de programador é que é vida, passar o dia todo sentado” já fazem parte do meu quotidiano.&lt;/p&gt;

&lt;p&gt;Neste artigo quero fazer uma breve introdução a linguagens de programação e ao que esta carreira representa.&lt;/p&gt;

&lt;h3 id=&quot;linguagens&quot;&gt;Linguagens&lt;/h3&gt;

&lt;p&gt;Eu comecei a programar em TCL e depois fiquei uns anos a programar para web com PHP e C#. Há cerca de 1/2 anos comecei a lidar mais com linguagens como Python e shell que me têm ajudado a evoluir bastante enquanto programador.&lt;/p&gt;

&lt;h4 id=&quot;php--hack&quot;&gt;PHP + Hack&lt;/h4&gt;

&lt;p&gt;Hack, yes! Grande prenda da equipa do Facebook, esta linguagem é baseada no PHP mas muito mais direccionada a OOO.&lt;/p&gt;

&lt;p&gt;Para mim as principais vantagens são os tipos anónimos e funções com o retorno definido, por exemplo&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * @return User&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Em PHP é assim que consigo ter o IDE a utilizar a auto completação. Tenho de anotar a função com o retorno. Em hack a história é outra&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;bibliotecas-e-frameworks&quot;&gt;Bibliotecas e Frameworks&lt;/h4&gt;

&lt;p&gt;Para mim isto era a única razão pela qual fiquei tanto tempo no .NET, por causa das bibliotecas que temos disponíveis. &lt;/p&gt;

&lt;p&gt;Isto tem bastante peso na escolha de uma linguagem para determinado projecto. Vai ser opensource? Temos disponibilidade do cliente para pagar serviços de desenvolvimento? Está em questão a compatibilidade entre plataformas?&lt;/p&gt;

&lt;p&gt;O ServiceStack é um excelente exemplo de como uma framework pode ser o suficiente para matar um projecto. Até há pouco tempo esta framework era opensource mas sempre com a licença BSD. Uma framework excelente direccionada a webservices e com metadologias e propostas de desenho muito boas mesmo.&lt;/p&gt;

&lt;p&gt;Na actualização da versão 3 para 4 alteraram os planos, passou a ser e apenas a versão 3 se manteve como BSD. O que aconteceu a quem tem projectos suportados nesta framework? São clientes da 4 ou vão ter de fazer um fork da 3 :)&lt;/p&gt;

&lt;p&gt;Já me aconteceu utilizar bibliotecas que já nem eram mantidas, ou que secalhar não são tão boas quanto isso. Podem ter uma API que utilizemos sem problema e satisfaça as necessidades mas o código sofrer de má programação. &lt;/p&gt;

&lt;h3 id=&quot;programador&quot;&gt;Programador&lt;/h3&gt;

&lt;p&gt;Uma grande dificuldade que tenho é o tempo que tenho de dedicar à minha formação enquanto programador. Já trabalhei para empresas que dedicam X horas por semana do teu horário de trabalho para a tua formação, seja com Workshops presenciais ou simplesmente darem-te tempo para estudares!&lt;/p&gt;

</description>
				<pubDate>Wed, 24 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/programacao/2014/09/24/linguagens-programacao.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/programacao/2014/09/24/linguagens-programacao.html</guid>
			</item>
		
			<item>
				<title>Padrão Builder</title>
				<description>&lt;p&gt;Padrão Factory Method&lt;/p&gt;

&lt;p&gt;Este padrão é talvez o mais conhecido de todos os padrões de projecto publicado no “Design Patterns: Elements of Reusable Object-Oriented Software”. Foi quando li este livro que comecei a programar.&lt;/p&gt;

&lt;p&gt;A função dos padrões Factory é encapsular a criação de objectos. &lt;/p&gt;

&lt;p&gt;O Factory Method tem a particularidade de encapsular a criação de objectos e deixar as sub classes decirem quais os objectos criados&lt;/p&gt;

&lt;p&gt;Este é o teste unitário com que vamos testar o código&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public class Bible {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	public function getVerses($bookId, $chapter, $fromVerse, $toVerse = null) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		// etc&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public abstract class BibleCreator {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	public function factoryMethod($version);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public $bible;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Creator&lt;/strong&gt; - Define a estrutura principal a ser herdada por todos os construtores. &lt;/p&gt;

&lt;p&gt;Temos o método abstracto &lt;strong&gt;factoryMethod()&lt;/strong&gt; que é utilizado pelas sub classes para criarem um objecto Bible. Também podemos criar mais métodos a serem implementados, um exemplo seria um &lt;strong&gt;getBible()&lt;/strong&gt; que retornava o objecto Bible&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public class JfrAlmeidaBible : Bible {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	public function factoryMethod(){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$bible = new Bible(); &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		// etc &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		return $bible;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este é o constructor concreto. Herda o Creator (Bible) sendo assim uma sub class que referi em cima, implementa o método &lt;strong&gt;factoryMethod()&lt;/strong&gt; para criar o objecto.&lt;/p&gt;

&lt;p&gt;Person&lt;/p&gt;

&lt;p&gt;ConcretPerson&lt;/p&gt;

&lt;h2 id=&quot;director&quot;&gt;Director&lt;/h2&gt;

&lt;p&gt;Constroi o um objecto utilizando a interface do builder. &lt;/p&gt;

&lt;h2 id=&quot;builder&quot;&gt;Builder&lt;/h2&gt;

</description>
				<pubDate>Wed, 24 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/design-pattern/2014/09/24/builder-pattern.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/design-pattern/2014/09/24/builder-pattern.html</guid>
			</item>
		
			<item>
				<title>Arquitecturas e Padrões em software</title>
				<description>&lt;p&gt;Esta é a minha área favorita e nem que escrever! Para já mantenho tudo neste artigo, depois logo se vê
#### PHP&lt;/p&gt;

&lt;p&gt;Começar com um exemplo simples. Uma aplicação com as seguintes entidades:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Utilizador&lt;/li&gt;
  &lt;li&gt;Mensagem&lt;/li&gt;
  &lt;li&gt;Artigos&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O que esta aplicação mais vai ter são operações CRUD - create, read, update e delete. Dividir uma aplicação em camadas tem vantagens.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class UserRepository implements IRepository {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	protected $dbContext;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public function __construct($ioc) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$this-&amp;gt;dbContext = $ioc[&amp;#39;database&amp;#39;]-&amp;gt;getDbContext(&amp;#39;App\Domain\User&amp;#39;));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public function get($id){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		return $dbContext-&amp;gt;get($id);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class UserService : BaseService {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	protected $userRepository;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public function __construct($ioc) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		parent::__construct($ioc);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$this-&amp;gt;userRepository = new \App\Data\UserRepository($ioc);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public function get($id) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		try {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			$this-&amp;gt;baseValidator-&amp;gt;assertId($id); // If id is invalid, throw exception&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			$user = $this-&amp;gt;userRepository-&amp;gt;get($id);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;			if(is_null($user)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;				throw new UserNotFoundException($user);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;			$userBuilder = new \App\Services\UserBuilder($user);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			$userBuilder-&amp;gt;build();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			$userDto = $userBuilder-&amp;gt;getDto();&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;			return $userDto;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		catch(MissingArgumentException $ex) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			$response = \App\Services\ErrorProvider::getResponse($ex);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			return $response;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Quando chamo a função assertId(). Ela vai validar o id e asegurar que é válido. Isto não significa que ele exista pois este tipo de função não recorre a recursos, apenas realiza uma validação.&lt;/p&gt;

&lt;p&gt;No caso de ser inválido então invoca uma excepção, por exemplo InvalidIdException. Esta excepção não vamos estar a apanhar em cada função das APIs como é o exemplo do userService-&amp;gt;get().&lt;/p&gt;

&lt;p&gt;Estas função lidamos numa camada superior. O ideal é a BaseService ter um função que lide com excepções globais como o exemplo da InvalidException. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;class UserApi : RestBase {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	protected $userBusiness;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public function __construct($ioc) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		parent::__construct($ioc);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$this-&amp;gt;userBusiness = new \App\Business\UserBusiness($ioc);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;	public function get(){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$id = $this-&amp;gt;app-&amp;gt;request()-&amp;gt;params(&amp;#39;id&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		if(empty($id)) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;			throw new ArgumentMissingExpcetion(&amp;#39;id&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;		$user = $this-&amp;gt;userBusiness-&amp;gt;get($id);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;		return array(&amp;#39;code&amp;#39; =&amp;gt; 200, &amp;#39;result&amp;#39; =&amp;gt; $user);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Agora falta declarar os pontos de acesso á API. Eu uso o Slim em projectos PHP apenas para isto, mas há outras micro frameworks melhores.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$app = new \Slim\Slim();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$ioc = \App\Services\IocContainer();&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;$app-&amp;gt;get(&amp;#39;/api/user&amp;#39;, function() use($ioc) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	$ioc[&amp;#39;userApi&amp;#39;]-&amp;gt;get();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;$app-&amp;gt;run();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este seria o ficheiro index.php ou api.php fora da biblioteca. A ideia aqui é manter apenas um ficheiro na pasta onde a aplicação está publicada (tipica /var/www). Este ficheiro consume a biblioteca, essa biblioteca que é carregada por PSR está noutra pasta mais protegida.&lt;/p&gt;

&lt;p&gt;A biblioteca é composta por&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API - Classes que consomem a biblioteca&lt;/li&gt;
  &lt;li&gt;Serviços - Classes de negócio, consomem recursos como repositórios de base de dados, validam entradas do utilizador, etc&lt;/li&gt;
  &lt;li&gt;Data &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eu não utilizo PHP para gerar as páginas. Como utilizo muito o Angular consigo ter apenas ficheiros estáticos que posso distribuir por uma CDN.&lt;/p&gt;
</description>
				<pubDate>Tue, 23 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/software/2014/09/23/arquitectura-padroes.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/software/2014/09/23/arquitectura-padroes.html</guid>
			</item>
		
			<item>
				<title>Lidar com erros e excepções</title>
				<description>&lt;p&gt;Lembro-me de ter publicado alguns sites que mandavam o relatório das excepções como resultado sempre que alguma coisa corria mal.&lt;/p&gt;

&lt;p&gt;Eu utilizo excepções para lidar com erros e validações da aplicação. Por exemplo, para validação de entrade de dados (classes DTO que uso e populo dinamicamente com funções auxiliares e alguma refactoração) eu não vou criar uma excepção diferente para cada tipo de erro que possa existir como MinLengthException, NumericLowerException, etc.&lt;/p&gt;

&lt;p&gt;Preferia usar algo assim&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserNotConfirmedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$userId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;userId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;userId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Neste caso como valido campos dinâmicos:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BaseRest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;confirm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserConfirmValidator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserConfirmValidator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AbstractValidator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SomeLibrary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$validate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserNotConfirmedException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;errorTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O método assert vai invocar a excepção&lt;/p&gt;
</description>
				<pubDate>Mon, 22 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/software/2014/09/22/errors-and-exceptions.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/software/2014/09/22/errors-and-exceptions.html</guid>
			</item>
		
			<item>
				<title>DNS Spoofing</title>
				<description>&lt;p&gt;DNS spoofing também é conhecido como DNS cache poising ou envenenamento de cache DNS.&lt;/p&gt;

&lt;p&gt;Um computador numa rede usa um servidor DNS fornecido pela rede local (um router) ou um provedor de internet (Vodafone, MEO, etc) para traduzir os domínios que acedemos em endereço IP. Esta técnica de penetração	 tem como objectivo alterar as DNS a que os utilizadores de uma rede se estão a ligar, para que os possamos redireccionar para um site falso ou tantas outras coisas como adulterar respostas de outros sites.&lt;/p&gt;

&lt;p&gt;Vamos estudar o caso de um café com um Router instalado pela malta da PT.&lt;/p&gt;

&lt;p&gt;Se forem aqueles da thomson com a 3!play como password de Administrador ou qualquer outro que não tenha sido alterada a password de fábrica e esteja disponível o acesso ao Router é fácil.&lt;/p&gt;

&lt;p&gt;Senão há alternativas como rocurar por vulnerabilidades existentes para o router em questão e modelo (há ferramentas que fazem o trace ao router para obter esta informação). Um ataque brute-force também é resposta claro.&lt;/p&gt;

&lt;p&gt;Com o acesso ao aparelho só precisamos de alterar o servidor DNS que ele consome. Esse servidor DNS vão ser o nosso PC ou um servidor que tenhamos que faça de proxy e lide com o tráfego da melhor forma que entender.&lt;/p&gt;

&lt;h3 id=&quot;dnsspoof&quot;&gt;dnsspoof&lt;/h3&gt;

&lt;p&gt;Há formas mais fáceis de realizar estes ataques, por exemplo se já estivermos dentro da rede mas não tenhamos acesso à administração do router (por exemplo crackamos a WEP apenas).&lt;/p&gt;

&lt;p&gt;Depois explico como utilizar do dnsspoof, também tutoriais sobre isso é o que menos falta.&lt;/p&gt;
</description>
				<pubDate>Mon, 22 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/hack/2014/09/22/dns-spoofing.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/hack/2014/09/22/dns-spoofing.html</guid>
			</item>
		
			<item>
				<title>Repositório de software</title>
				<description>&lt;p&gt;Em Linux utilizamos gestores de pacotes como o apt e yum para instalar software sem termos de fazer a instalação manual ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install. Eles instalam as dependências necessárias o que pode ser bom ou não, já dei por mim a perder horas por causa de dependências em falta.&lt;/p&gt;

&lt;p&gt;As distribuições de Linux mantêm repositórios públicos. Nestes repositórios eles disponibilizam software configurado, compilado e pronto para diferentes arquitecturas e versões da distribuição. Raramente encontras um software no repositório oficial do SO, em casos como o mono tens versões usadas há 4 ou 5 anos.&lt;/p&gt;

&lt;p&gt;Agora começa a ser mais comum quem distribui o software disponibilizar um repositório público que podes adicionar e confirar pois são os proprietários do código a disponibilizar os pacotes. &lt;/p&gt;

&lt;p&gt;Mesmo assim ainda são poucas e há muitos softwares que são disponibilizado por outros terceiros que fazem esse trabalho por oferta.
Por exemplo, a gblib6 que já é embarcada com o Debian Wheezy é inferior ao 2.13 já requirido por muitos softwares recentes. Eu utilizo a distruibuição Kali num portátil de desenvolvimento e bem sei a dor de cabeça que isto deu!&lt;/p&gt;

&lt;h3 id=&quot;chaves&quot;&gt;Chaves&lt;/h3&gt;

&lt;p&gt;Quando adicionamos um novo repositório ao gestor de software vamos permitir que esse distribuidor instale o código que quiser.&lt;/p&gt;

&lt;p&gt;Uma medida de segurança implementada é a troca de chaves pública e privada. Quem pública estes softwares tem de disponibilizar uma chave pública. Essa chave pública é mostrada em mensagens de erro quando tentamos actualizar o Apt e ele tem um repositório sem chave confiada:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;W: GPG error: http://ppa.launchpad.net intrepid Release: The following signatures couldn&#39;t be verified because the public key is not available: NO_PUBKEY C514AF8E4BA401C3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Neste exemplo temos de fazer download da chave&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --keyserver pgpkeys.mit.edu --recv-key C514AF8E4BA401C3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;E adicioná-la com apt-key add ficheiro-da-chave.key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg -a --export C514AF8E4BA401C3 | apt-key add -
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;origem&quot;&gt;Origem&lt;/h3&gt;

&lt;p&gt;A origem do repositório é importante. São vários os exemplos de ataques feitos que distribuiram código através de software de terceiros. Com acesso ao servidor de distribuição podem distribuir código a todos que actualizem.&lt;/p&gt;
</description>
				<pubDate>Thu, 18 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/ide/software/2014/09/18/linux-software-versoes-chaves.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/ide/software/2014/09/18/linux-software-versoes-chaves.html</guid>
			</item>
		
			<item>
				<title>IDEs - Softwares para programar</title>
				<description>&lt;h3 id=&quot;visual-studio&quot;&gt;Visual Studio&lt;/h3&gt;

&lt;p&gt;Linguagens: VB e C#, C++, F#&lt;/p&gt;

&lt;p&gt;O Visual Studio sempre foi campeão a nível de IDEs, se tiveres um bom pc consegues tirar partido de funcionalidades muito boas. &lt;/p&gt;

&lt;p&gt;O &lt;a href=&quot;http://www.jetbrains.com/resharper/&quot;&gt;Resharper&lt;/a&gt; é um plugin excelente, a caixa de sugestões que apresenta enquanto escreves código (syntax highlighting) não se compara a qualquer outro IDE. A revisão de código é muito boa assim como as opções de refacturar o código. Sem dúvida que ajuda a reduzir o tempo de desenvolvimento. &lt;/p&gt;

&lt;p&gt;Não é gratuíto mas já foi crackado, e o google é amigo.&lt;/p&gt;

&lt;p&gt;O &lt;a href=&quot;https://www.nuget.org/&quot;&gt;Nuget&lt;/a&gt; é o gestor de pacotes usado em .NET. O Visual Studio tem a integração com ele e resolve as dependências de vários projectos. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/ides-vs1.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;monodevelop&quot;&gt;MonoDevelop&lt;/h3&gt;

&lt;p&gt;Linguagens: C#&lt;/p&gt;

&lt;p&gt;O MonoDevelop é um IDE complicado. Ele é opensource e é usado em Linux para programar C# a utilizar o mono. Eu utilizo-o porque é mais que suficiente para programar em C#, apesar de não se comparar ao Visual Studio é muito bom e também tem vários plugins que instalados melhoram a experiência de utilizador.&lt;/p&gt;

&lt;p&gt;O problema da existência dele para mim é o seu descendente, o Xamarin Studio. É muito bom, compatível com Windows, Linux e Mac e até o comparo ao Visual Studio em muitas funcionalidades e vantagens mas infelizmente uma desvantagem é o preço dele, daí usar o MonoDevelop.&lt;/p&gt;

&lt;p&gt;Para Linux a Xamarin está a publicar pacotes de instalação oficiais para o mono que agora devemos usar em vez dos desactualizados da distrubuição ou de outras PPAs que não são da Xamarim.&lt;/p&gt;

&lt;p&gt;Para o Monodevelop eles não mantêm pacotes, isto porque lhes interessa o Xamarin. Eu uso a PPA do tpokorra para o Monodevelop. Já usava antes para o mono e normalmente era a mais actualizada e de confiança.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/ides-monodevelop4.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;xamarin-studio&quot;&gt;Xamarin Studio&lt;/h3&gt;

&lt;p&gt;Linguagens: C#&lt;/p&gt;

&lt;p&gt;Já vi muitas opiniões polémicas em relação ao que a Xamarin representa mas a verdade é que tem soluções para desenvolvimento rápido para aplicações mobile por exemplo. O mono continua a ser opensource e é usado em bastantes projectos também graças ao suporte que a Xamarin tem dado ao desenvolvimento do mono. A nível de compatibilidade suporta o C# 5 asincrono mas não é compatível com algumas funcionalidades do mvc e possivelmente outras soluções desenvolvidas por terceiros.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/ides-xamarin5.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;phpstorm&quot;&gt;PHPStorm&lt;/h3&gt;

&lt;p&gt;O IDE que neste momento utilizo para programar em PHP. É da mesma equipa do Resharper para o Visual Studio, daí facilmente me ter adaptado.&lt;/p&gt;

&lt;p&gt;O problema é o consumo de recursos para programar com ele. Num portátil com 4GB de ram e um processador fraco dual core AMD A1 não dá para trabalhar com ele.&lt;/p&gt;

&lt;p&gt;No entanto se tiveres um bom pc é semelhante ao Visual Studio a nível de experiência de utilizador. O facto de não ter soluções e cada projecto ser um programa separado fazia-me impressão a início mas até é melhor desde que o pc aguente.&lt;/p&gt;

&lt;p&gt;Não é gratuíto mas já foi crackado, e o google é amigo.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/ides-phpstorm2.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;netbeans&quot;&gt;NetBeans&lt;/h3&gt;

&lt;p&gt;É um IDE completo mas para mim inferir ao PHPStorm. A única vantagem que vi-a era abrir vários projectos em simultâneo.&lt;/p&gt;

&lt;p&gt;A integração com o Xdebug é simples, tem suporte a git e também tem bons plugins para melhorar a experiência de utilizador.&lt;/p&gt;

&lt;p&gt;No meu portátil tornou-se demasiado lento porque tinha abertos 4 ou 5 projectos na workspace e já consumia muitos recursos.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/ides-netbeans6.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;geany&quot;&gt;Geany&lt;/h3&gt;

&lt;p&gt;Utilizo o Geany para programar no portátil (é um portátil lento). É mais rápido que o Netbeans.&lt;/p&gt;

&lt;p&gt;O Geany é leve também por não ter demasiadas funcionalidades. O bom é que existem vários plugins que permitem torná-lo mais completo sem perder a qualidade de desempenho. Por exemplo, para fazer-mos debug a código temos de instalar o &lt;a href=&quot;http://plugins.geany.org/debugger.html&quot;&gt;Plugin Debugger&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/ides-geanydebugger3.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;vim&quot;&gt;Vim&lt;/h3&gt;

&lt;p&gt;O vim tanto pode ser aquele editor de acesso rápido que temos numa shell para editar ficheiros como pode ser usado para programar scripts e fazer debug por exemplo (&lt;a href=&quot;https://www.guilhermecardoso.pt/php/linux/2014/09/15/php-debug-with-vim-vdebug-xdebug.html&quot;&gt;Fazer debug em PHP com Vim, Vdebug e Xdebug&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Quando se trata de sites que tenho de alterar num servidor remoto mas que nem sequer é controlado por git ou subversion eu apenas uso o vim. Havia uma altura que o fazia por FTP para puder alterar num IDE mas bem configurado o vim até cria as tabs com 4 espaços por exemplo, e altera as cores para uma syntax de programação.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/vim_vdebug1.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;icecoder&quot;&gt;ICECoder&lt;/h3&gt;

&lt;p&gt;Aqui está uma surpresa interessante! Testei-o e é muito bom para algo desenvolvido em javascript e PHP, com as suas limitações claro.&lt;/p&gt;

&lt;p&gt;É muito recomendado para enviar para servidores remotos e fazer assim alterações do código por um browser mas com cautela, é sempre preferível evitar as vulnerabilidades no servidor de produção.&lt;/p&gt;

&lt;p&gt;Além da password que ele tem eu preferia proteger o directorio com utilizador e password também. Não querendo falar mal do projecto claro, é segurança apenas.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-entry__image&quot; src=&quot;/media/posts/ides-icecoder7.png&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 17 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/ide/software/2014/09/17/ides.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/ide/software/2014/09/17/ides.html</guid>
			</item>
		
			<item>
				<title>Invadir um site Wordpress - métodos e exemplos</title>
				<description>&lt;h3 id=&quot;verso&quot;&gt;Versão&lt;/h3&gt;

&lt;p&gt;Há vulnerabilidades conhecidas no código principal do Wordpress. Não são muitas mas andam aí e são fáceis de apanhar!&lt;/p&gt;

&lt;p&gt;Para descubrires a versão do wordpress procura a tag &lt;strong&gt;generator&lt;/strong&gt; na página retornada (ver código fonte do browser…).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;generator&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;WordPress 3.9.2&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A maioria das instalações contém o ficheiro readme.html que tem de ser removido depois de instalado o Wordpress. Também podemos ver a versão por aí.&lt;/p&gt;

&lt;p&gt;O próximo passo é saber a versão dos plugins. Podemos fazer um método passivo e fazer pedidos http aos ficheiros do plugin que procuramos, podemos também ver a resposta do http se é 200 para existente ou 404 para não encontrado.&lt;/p&gt;

&lt;p&gt;@todo - vou indicar alguns scripts com base de dados actualizadas que podemos usar para tornar o método aggressivo.&lt;/p&gt;

&lt;p&gt;Daqui iremos usar vulnerabilidades para os plugins encontrados, mas isso mais à frente.&lt;/p&gt;

&lt;h3 id=&quot;utilizadores&quot;&gt;Utilizadores&lt;/h3&gt;

&lt;p&gt;O método que vamos seguir para atacar as contas vai ser brute force. Uma tentativa em massava de autenticação com várias passwords pré defenidas.
O Wordpress permite saber quem é cada utilizador pelo seu id&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://guilhermecardoso.pt/?author=1 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Se estiver configurado para URLs amigáveis, o pedido retorna um redireccionamento indicando o nickname no url&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://guilhermecardoso.pt/author/gui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Além do método de brute force há outras formas de obter as credências.
Se estiveres ligado na mesma rede que alguém que entre no site e tiveres a sorte de não ter nenhum certificado SSL um rastreio do pedido http indica o utilizador e password. Da mesma forma podem ser usados keyloggers mas ou o instalas no mesmo computador que a pessoa que vai aceder ao site, ou dentro da mesma rede usas um exploit para instalar o keylogger (redes públicas com WindowsXP e softwares como o Java e Internet Explorer desactualizados são indicadas).&lt;/p&gt;

&lt;p&gt;De volta aos utilizadores, se te autenticares com um utilizador existente e uma password inválida o Wordpress é nosso amigo e avisa-nos que a conta existe.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/posts/wordpress-hack1.png&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ferramentas&quot;&gt;Ferramentas&lt;/h3&gt;

&lt;p&gt;As ferramentas e scripts que aqui vou indicar são código aberto e é espetacular encontrá-las no github, só demonstra a verdadeira liberdade do opensource :)&lt;/p&gt;

&lt;h4 id=&quot;httpwpscanorg&quot;&gt;http://wpscan.org/&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Login com brute force&lt;/li&gt;
  &lt;li&gt;Análise de plugins e temas com vulnerabilidades conhecidas&lt;/li&gt;
  &lt;li&gt;Indicar lista de utilizadores&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Um pequeno exemplo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby wpscan.rb -u 192.241.xx.x68 --threads 20 --wordlist 500worst.txt --username testadmin

********* SNIP ******************

[+] Starting the password brute forcer

  Brute forcing user &#39;testadmin&#39; with 500 passwords... 100% complete.
[+] Finished at Thu Jul 18 03:39:02 2013
[+] Elapsed time: 00:01:16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Admirado pelas 500 passwords num minuto e 16 segundos? Isto é numa VPS fraca na digital ocean que me custa 3.5 euros mensais. Servidores mais rápidos e infrastruturas maiores permitem-te resultados melhores. Em caso de ips bloqueados ou outras defesas que sejam aplicadas podes recorrer a uma rede: várias máquinas com uma lista curta de passwords a fazerem tentativas aleatórias para não serem bloqueadas por exemplo.&lt;/p&gt;

&lt;h4 id=&quot;nmap&quot;&gt;Nmap&lt;/h4&gt;

&lt;p&gt;Esta ferramenta aparece no Matrix! Ela não serve apenas para procurar portas abertas, diz-nos bastante mais que isso.&lt;/p&gt;

&lt;p&gt;@todo mostrar exemplos de scripts ecs :)&lt;/p&gt;

&lt;h3 id=&quot;vulnerabilidades&quot;&gt;Vulnerabilidades&lt;/h3&gt;

&lt;p&gt;As vulnerabilidades que estas ferramentas e scripts utilizam são erros ou falhas existentes no código. Estes erros e falhas podem permitir:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Enviar uma shell para o servidor e aceder a ela (vai efectuar acções no servidor como compressão de directorios e enviar por ftp, descubrir passwords em ficheiros de configuração, etc). Esta vulnerabilidade é comum em anexo de uploads que não validam correctamente o pedido.&lt;/li&gt;
  &lt;li&gt;Injecção de código SQL. URLs do gênero /wp-content/plugins/exemplo/ficheiro.php?id=3534 são usados para injectar código SQL, ou seja, substituir o id por algo que interpretado pela base de dados faça algo que não deveria. Isto ocorre também por má validação&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O problema destas vulnerabilidades é que são demasiado fáceis de ser descoberta por ser código aberto e todos temos acesso, até mesmo plugins pagos recebes o código (apenas tens de usar a licença para usar o plugin no site). O Wordpress tem uma comunidade enorme de programadores, uns melhores que os outros.
Há muitos temas excelentes a nível de design mas fracos na programação e que podem comprometer um servidor inteiro. Empresas que se baseam em “desenvolver” websites (não, CMS não é programar cara!) com CMS deste gênero correm estes riscos e a menos que não conheçam bem o terreno e saibam o que fazem, é comum perderem horas a fazer restauros por causa de plugins infectados.&lt;/p&gt;
</description>
				<pubDate>Tue, 16 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/php/linux/hack/2014/09/16/wordpress-hack-vulnerabilidades.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/php/linux/hack/2014/09/16/wordpress-hack-vulnerabilidades.html</guid>
			</item>
		
			<item>
				<title>Google Hacking Database</title>
				<description>&lt;p&gt;“Utilizar o Google para encontrar técnicos idiotas” - diz tudo. Google dorks são idiotas encontrados através do Google, sites mal configurados com ficheiros públicos que não deveriam ser.&lt;/p&gt;

&lt;p&gt;Como é que os dorks são encontrados através do Google? A seguinte pesquisa:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://www.google.pt/search?q=filetype:png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Retorna todos os ficheiros do tipo png. Agora vamos passar para um ficheiro mais interessante: &lt;strong&gt;.sql&lt;/strong&gt;. Vamos pesquisar apenas em sites com a extensão .gov&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.google.com/search?q=filetype:sql%20site:gov%20and%20%22insert%20into%22
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nesta pesquisa além da extensão do ficheiro ser .sql e a do domínio .gov, também estamos a incluir ficheiros que contenham explicitamente insert into
Este tipo de ficheiros costumam ser cópias de segurança geradas de acesso público que foram encontrados pelos bots da Google&lt;/p&gt;

&lt;p&gt;Algo muito comum neste tipo de pesquisa para script kiddies costuma ser procurar shell já enviados para os servidores. Alguém já explorou o servidor, enviou uma shell e o Google ainda a indexa para nós sabermos onde encontrá-la!&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;exploit-db&lt;/strong&gt; tem um arquivo dedicado a dorks do Google. Podes escolher vários tipos de Dorks como mensagens de erro, ficheiros que contenham passwords, etc. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.exploit-db.com/google-dorks/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;dorks&quot;&gt;Dorks&lt;/h2&gt;

&lt;h3 id=&quot;site&quot;&gt;site&lt;/h3&gt;
&lt;p&gt;Restringe a pesquisa ao domínio especificado. &lt;/p&gt;

&lt;p&gt;Exemplo: site:guilhermecardoso.pt&lt;/p&gt;

&lt;h3 id=&quot;inurl&quot;&gt;inurl&lt;/h3&gt;
&lt;p&gt;Restringue os resultados a links que contenham palavras específicas no URL. &lt;/p&gt;

&lt;p&gt;Exemplo: inurl:wp-admin&lt;/p&gt;

&lt;h3 id=&quot;intitle&quot;&gt;intitle&lt;/h3&gt;
&lt;p&gt;Títulos que contenham palavras específicas.&lt;/p&gt;

&lt;p&gt;Exemplo: intitle:Portugal&lt;/p&gt;

&lt;h3 id=&quot;allintitle&quot;&gt;allintitle&lt;/h3&gt;
&lt;p&gt;Semelhante ao &lt;strong&gt;intitle&lt;/strong&gt; mas corresponde exactamente ao título, enquanto que o intitle procura apenas palavras especificas.&lt;/p&gt;

&lt;p&gt;Exemplo: allintitle:Gui&lt;/p&gt;

&lt;h3 id=&quot;allinurl&quot;&gt;allinurl&lt;/h3&gt;

&lt;h3 id=&quot;cache&quot;&gt;cache&lt;/h3&gt;

&lt;h3 id=&quot;numrange&quot;&gt;numrange&lt;/h3&gt;

&lt;h3 id=&quot;filetype-or-ext&quot;&gt;filetype or ext&lt;/h3&gt;

&lt;h3 id=&quot;link&quot;&gt;link&lt;/h3&gt;

&lt;h3 id=&quot;inanchor&quot;&gt;inanchor&lt;/h3&gt;

&lt;h3 id=&quot;allintext&quot;&gt;allintext&lt;/h3&gt;

&lt;h3 id=&quot;intext&quot;&gt;intext&lt;/h3&gt;

&lt;h3 id=&quot;section&quot;&gt;*&lt;/h3&gt;

&lt;h3 id=&quot;section-1&quot;&gt;**&lt;/h3&gt;

&lt;h3 id=&quot;section-2&quot;&gt;.&lt;/h3&gt;

&lt;h3 id=&quot;section-3&quot;&gt;|&lt;/h3&gt;

&lt;h3 id=&quot;section-4&quot;&gt;+&lt;/h3&gt;

&lt;h3 id=&quot;section-5&quot;&gt;-&lt;/h3&gt;

&lt;h1 id=&quot;exploit-db&quot;&gt;exploit-db&lt;/h1&gt;

&lt;p&gt;A Offensive Security lançou um projecto no exploit-db.com &lt;/p&gt;
</description>
				<pubDate>Tue, 16 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/angularjs/2014/09/16/google-hacking-database.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/angularjs/2014/09/16/google-hacking-database.html</guid>
			</item>
		
			<item>
				<title>Bitcoin</title>
				<description>&lt;p&gt;O Bitcoin é uma moeda virtual que utiliza a rede peer to peer (o mesmo que utilizas quando sacas um torrent). Neste sistema não existe uma autoridade centralizada que controle as transacções, como uma entidade bancária por exemplo.
É utilizado um sistema de banco de dados distribuídos espalhados pelos nós da rede p2p para registar as transacções, e com ciptografia utiliza funções de segurança como aseguir que bitcoins só podem ser usados pelo dono.&lt;/p&gt;

&lt;p&gt;O que significa isto? Ninguém é dono do Bitcoin e caramba, o próprio código fonte é livre!&lt;/p&gt;

&lt;p&gt;No mundo do hacking isto é aquilo que precisas para alugar servidores e outros recursos anonimanente. Tens de passar sempre pelo processo de obter as Bitcoins mas há imensas formas e vários serviços de confiança.&lt;/p&gt;

&lt;p&gt;Apesar de apenas ter um formato digital, uma bitcoin é considerado um activo no sentido económico. Tem valor, valor esse que não pode ser inflacionado da mesma forma que o Euro quando se imprimem mais notas por exemplo.&lt;/p&gt;

&lt;h3 id=&quot;como-usar&quot;&gt;Como usar&lt;/h3&gt;

&lt;p&gt;Ao contrário de uma conta bancária onde a entidade é que tem o dinheiro, com o bitcoin tu armazenas a moeda no teu computador, numa pen drive (cuidado, demasiado casos de acidentes!!) ou até mesmo num serviço de alojamento de bitcoins online.&lt;/p&gt;

&lt;p&gt;Em Portugal já há soluções para comprar bitcoins.&lt;/p&gt;

&lt;h3 id=&quot;como-funciona&quot;&gt;Como funciona&lt;/h3&gt;

&lt;p&gt;No bitcoin, todas as transacções são públicas e armazenadas num banco de dados distrubído, block-chain.&lt;/p&gt;
</description>
				<pubDate>Tue, 16 Sep 2014 00:00:00 +0100</pubDate>
				<link>http://guilhermecardoso.pt/bitcoin/2014/09/16/bitcoin-introducao.html</link>
				<guid isPermaLink="true">http://guilhermecardoso.pt/bitcoin/2014/09/16/bitcoin-introducao.html</guid>
			</item>
		
	</channel>
</rss>